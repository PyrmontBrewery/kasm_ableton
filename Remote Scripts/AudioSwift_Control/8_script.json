[{"id":0,"type":"script","name":"AudioSwift Control","script_id":1,"global_feedback":"default","global_feedback_active":"True","global_LED_on":"127","global_LED_off":"0","modifiers":[{"id":"m1","name":"m1","tokenisedCode":"self.get_modifier_value(\"m1\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m2","name":"m2","tokenisedCode":"self.get_modifier_value(\"m2\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m3","name":"m3","tokenisedCode":"self.get_modifier_value(\"m3\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m4","name":"m4","tokenisedCode":"self.get_modifier_value(\"m4\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m5","name":"m5","tokenisedCode":"self.get_modifier_value(\"m5\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m6","name":"m6","tokenisedCode":"self.get_modifier_value(\"m6\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m7","name":"m7","tokenisedCode":"self.get_modifier_value(\"m7\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m8","name":"m8","tokenisedCode":"self.get_modifier_value(\"m8\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m9","name":"m9","tokenisedCode":"self.get_modifier_value(\"m9\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m10","name":"m10","tokenisedCode":"self.get_modifier_value(\"m10\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m11","name":"m11","tokenisedCode":"self.get_modifier_value(\"m11\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m12","name":"m12","tokenisedCode":"self.get_modifier_value(\"m12\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m13","name":"m13","tokenisedCode":"self.get_modifier_value(\"m13\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m14","name":"m14","tokenisedCode":"self.get_modifier_value(\"m14\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m15","name":"m15","tokenisedCode":"self.get_modifier_value(\"m15\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m16","name":"m16","tokenisedCode":"self.get_modifier_value(\"m16\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m17","name":"m17","tokenisedCode":"self.get_modifier_value(\"m17\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m18","name":"m18","tokenisedCode":"self.get_modifier_value(\"m18\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m19","name":"m19","tokenisedCode":"self.get_modifier_value(\"m19\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m20","name":"m20","tokenisedCode":"self.get_modifier_value(\"m20\")","initialValue":0,"cat":"modifier","valueType":"all"}],"lists":[{"id":"list1","name":"list1","tokenisedCode":"self.get_list(\"list1\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list2","name":"list2","tokenisedCode":"self.get_list(\"list2\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list3","name":"list3","tokenisedCode":"self.get_list(\"list3\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list4","name":"list4","tokenisedCode":"self.get_list(\"list4\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list5","name":"list5","tokenisedCode":"self.get_list(\"list5\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list6","name":"list6","tokenisedCode":"self.get_list(\"list6\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list7","name":"list7","tokenisedCode":"self.get_list(\"list7\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list8","name":"list8","tokenisedCode":"self.get_list(\"list8\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list9","name":"list9","tokenisedCode":"self.get_list(\"list9\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list10","name":"list10","tokenisedCode":"self.get_list(\"list10\")","initialValue":"[]","cat":"custom list","valueType":"list"}],"script_attach_id":45820,"file_name":"8_script.json","LED_mapping_type_needs_feedback":false,"has_child":-1,"python_version":"3","errors":"","allChips":[],"device_selection_follows_track_selection":false},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Drum Rack Labels","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\ntry:\n  cc = self.midi_cc_ch_15_val_42.cur_val\n  devices = len(self.song().view.selected_track.devices)\n\n  if devices != 0:\n\n    drumRack = self.song().view.selected_track.view.selected_device.can_have_drum_pads\n    if drumRack == True:\n      label = self.song().view.selected_track.view.selected_device.drum_pads[cc].name\n      sendSysex( cc, 3, label )\n\n\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=24","custom_lom_listener":"","selectionObj":{"id":"drum_rack_labels","name":"Drum Rack Labels was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":42,"tokenisedCode":"self.midi_cc_ch_15_val_42","valueType":"int","value":"control_id=24","desc":"Drum Rack Labels was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":24,"id":49,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Recall Snapshot","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  cc = self.midi_cc_ch_15_val_119.cur_val\n  total = self.get_num_of_devices(\"view.selected_track\")\n\n  if total >= 1 and cc == 127:\n    for i in range(0, total):\n      if self.song().view.selected_track.devices[i].name == \"AS Snapshots\":\n        value = int(self.song().view.selected_track.devices[i].parameters[1].value)\n        value = value\n        self._send_midi((207, value))\n\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=23","custom_lom_listener":"","selectionObj":{"id":"recall_snapshot","name":"Recall Snapshot was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":119,"tokenisedCode":"self.midi_cc_ch_15_val_119","valueType":"int","value":"control_id=23","desc":"Recall Snapshot was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":48,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":23},{"level":0,"has_child":-1,"id":1,"type":{"id":0,"name":"Mode","type":"Mode","parent":null,"has_child":-1,"level":0,"icon":"fa-layer-group"},"parent_id":0,"name":"Control Mode","LED_feedback":"custom","LED_mapping_type_needs_feedback":false,"LED_feedback_active":false,"LED_on":127,"LED_off":0,"LED_send_feedback_to_selected":[],"get_mode_name":"","get_controller_name":"","get_type_name":"Mode","errors":"","chips":[]},{"level":1,"has_child":0,"id":2,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 1","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\nm18 == true  lets you send back sysex messages in real time\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 15\n  m = \"m1\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_21.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.1\n  elif range > 110 and range <= 120:\n    multiplier = 0.3\n  elif range > 120 and range <= 130:\n    multiplier = 0.6\n  elif range > 130 and range <= 150:\n    multiplier = 0.8\n  elif range > 150 and range <= 200:\n    multiplier = 1\n  elif range > 200 and range <= 300:\n    multiplier = 1.2\n  elif range > 300:\n    multiplier = 1.4\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=2","custom_lom_listener":"","selectionObj":{"id":"slider_1","name":"Slider 1 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"21","tokenisedCode":"self.midi_cc_ch_15_val_21","valueType":"int","value":"control_id=2","desc":"Slider 1 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":2,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":3,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 2","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 14\n  m = \"m2\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_22.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=3","custom_lom_listener":"","selectionObj":{"id":"slider_2","name":"Slider 2 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"22","tokenisedCode":"self.midi_cc_ch_15_val_22","valueType":"int","value":"control_id=3","desc":"Slider 2 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":3,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":4,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 3","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 13\n  m = \"m3\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_23.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=4","custom_lom_listener":"","selectionObj":{"id":"slider_3","name":"Slider 3 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"23","tokenisedCode":"self.midi_cc_ch_15_val_23","valueType":"int","value":"control_id=4","desc":"Slider 3 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":4,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":5,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 4","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 12\n  m = \"m4\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_24.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=5","custom_lom_listener":"","selectionObj":{"id":"slider_4","name":"Slider 4 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"24","tokenisedCode":"self.midi_cc_ch_15_val_24","valueType":"int","value":"control_id=5","desc":"Slider 4 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":9,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 5","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 11\n  m = \"m5\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_25.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=6","custom_lom_listener":"","selectionObj":{"id":"slider_5","name":"Slider 5 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"25","tokenisedCode":"self.midi_cc_ch_15_val_25","valueType":"int","value":"control_id=6","desc":"Slider 5 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":6,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":10,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 6","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 10\n  m = \"m6\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_26.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=7","custom_lom_listener":"","selectionObj":{"id":"slider_6","name":"Slider 6 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"26","tokenisedCode":"self.midi_cc_ch_15_val_26","valueType":"int","value":"control_id=7","desc":"Slider 6 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":7,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":11,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 7","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 9\n  m = \"m7\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_27.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=8","custom_lom_listener":"","selectionObj":{"id":"slider_7","name":"Slider 7 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"27","tokenisedCode":"self.midi_cc_ch_15_val_27","valueType":"int","value":"control_id=8","desc":"Slider 7 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":8,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":12,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 8","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 8\n  m = \"m8\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_28.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=9","custom_lom_listener":"","selectionObj":{"id":"slider_8","name":"Slider 8 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"28","tokenisedCode":"self.midi_cc_ch_15_val_28","valueType":"int","value":"control_id=9","desc":"Slider 8 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":9,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":13,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 9","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 7\n  m = \"m9\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_29.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=10","custom_lom_listener":"","selectionObj":{"id":"slider_9","name":"Slider 9 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"29","tokenisedCode":"self.midi_cc_ch_15_val_29","valueType":"int","value":"control_id=10","desc":"Slider 9 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":10,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":14,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 10","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 6\n  m = \"m10\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_30.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=11","custom_lom_listener":"","selectionObj":{"id":"slider_10","name":"Slider 10 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"30","tokenisedCode":"self.midi_cc_ch_15_val_30","valueType":"int","value":"control_id=11","desc":"Slider 10 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":11,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":15,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 11","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 5\n  m = \"m11\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_31.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=12","custom_lom_listener":"","selectionObj":{"id":"slider_11","name":"Slider 11 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"31","tokenisedCode":"self.midi_cc_ch_15_val_31","valueType":"int","value":"control_id=12","desc":"Slider 11 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":12,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":16,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 12","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 4\n  m = \"m12\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_32.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=13","custom_lom_listener":"","selectionObj":{"id":"slider_12","name":"Slider 12 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"32","tokenisedCode":"self.midi_cc_ch_15_val_32","valueType":"int","value":"control_id=13","desc":"Slider 12 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":13,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":17,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 13","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 3\n  m = \"m13\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_33.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=14","custom_lom_listener":"","selectionObj":{"id":"slider_13","name":"Slider 13 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"33","tokenisedCode":"self.midi_cc_ch_15_val_33","valueType":"int","value":"control_id=14","desc":"Slider 13 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":14,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":18,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 14","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 2\n  m = \"m14\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_34.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=15","custom_lom_listener":"","selectionObj":{"id":"slider_14","name":"Slider 14 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"34","tokenisedCode":"self.midi_cc_ch_15_val_34","valueType":"int","value":"control_id=15","desc":"Slider 14 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":15,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":19,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 15","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 1\n  m = \"m15\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_35.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=16","custom_lom_listener":"","selectionObj":{"id":"slider_15","name":"Slider 15 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"35","tokenisedCode":"self.midi_cc_ch_15_val_35","valueType":"int","value":"control_id=16","desc":"Slider 15 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":16,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":20,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Parameter 16","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(total))\n\"\"\"\n\n\"\"\" Calculate parameter number in Bank \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 0\n  m = \"m16\"\n  if x >= total:\n    x = 0\n\n  slider = self.midi_cc_ch_15_val_36.cur_val\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_track.view.selected_device.parameters[x].is_enabled\n  quantized = self.song().view.selected_track.view.selected_device.parameters[x].is_quantized\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.view.selected_device.parameters[x].default_value\n  self.song().view.selected_track.view.selected_device.parameters[x].value = default  \n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(default)\n\n  self.set_modifier_value(m, default)\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n  items = self.song().view.selected_track.view.selected_device.parameters[x].value_items\n  total = len(items)\n  \n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = a\n    self.set_modifier_value(m, a)\n  return  \n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\"\"\"\n  if value >= 1 and value <= 8:\n    setItem(1.0)\n  elif value >= 120 and value <= 127:\n    setItem(-1.0)\n  return\n\"\"\"\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.view.selected_device.parameters[x].value = param\n    self.set_modifier_value(m, param)\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.3\n  elif range > 110 and range <= 120:\n    multiplier = 0.5\n  elif range > 120 and range <= 130:\n    multiplier = 0.8\n  elif range > 130 and range <= 150:\n    multiplier = 1\n  elif range > 150 and range <= 200:\n    multiplier = 1.3\n  elif range > 200 and range <= 300:\n    multiplier = 1.5\n  elif range > 300:\n    multiplier = 1.7\n    \n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True and x != 0:\n  self.set_modifier_value(\"m18\", True)\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=17","custom_lom_listener":"","selectionObj":{"id":"slider_16","name":"Slider 16 was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"36","tokenisedCode":"self.midi_cc_ch_15_val_36","valueType":"int","value":"control_id=17","desc":"Slider 16 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":17,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":7,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Left Bank","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  if n == 1 and len(y) == 2 and y[1] == 45:\n      self._send_midi(((m + 203), 0, 0))\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  left = self.midi_cc_ch_15_val_37.cur_val\nexcept AttributeError:\n  return\n\nx = a - 1\n\nif left == 127:\n  if x <= 1:\n    self.set_modifier_value(\"m20\", 1)\n    name = self.song().view.selected_track.view.selected_device.name\n    text = str(name) + str(\": \") + str(\"Bank 1\")\n    sendSysex(39, 2, text)\n  else:\n    self.set_modifier_value(\"m20\", x)\n    name = self.song().view.selected_track.view.selected_device.name\n    text = str(name) + str(\": \") + str(\"Bank \") + str(x)\n    sendSysex(39, 2, text)\n  \n\"\"\" Set parameters names \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  parameters = self.song().view.selected_track.view.selected_device.parameters\n  a = self.get_modifier_value(\"m20\")\n\n  b = 15\n  x = (a * 16) - b\n  self.clear_list(\"list1\")\n  self.clear_list(\"list2\")\n  self.clear_list(\"list3\")\n  \n  for i in range(17):\n    self.add_to_list(\"list1\", \"-\", i)\n    self.add_to_list(\"list2\", \"-\", i)\n    self.add_to_list(\"list3\", 0.0, i)\n\n  for index, item in enumerate(parameters):\n    x = (a * 16) - b\n    if index == x:\n        name = self.song().view.selected_track.view.selected_device.parameters[x].name\n        value = self.song().view.selected_track.view.selected_device.parameters[x].value\n        valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(value) \n        \n        pos = 15 - b\n        \n        self.add_to_list(\"list1\", name, pos)\n        self.add_to_list(\"list2\", valueString, pos)\n        self.add_to_list(\"list3\", value, pos)\n\n        if b == 0:\n           break\n        b = b - 1\n  \n  for i in range(1, 17):\n     \"\"\"self.log_message(\"csslog: \" + str(self.get_list_item(\"list1\", i)))\"\"\"\n     self.set_modifier_value(\"m18\", False)\n     self.set_modifier_value(\"m\" + str(i), self.get_list_item(\"list3\", i))\n     sendSysex( (i + 20), 0, self.get_list_item(\"list1\", i))  \n     sendSysex( (i + 20), 1, self.get_list_item(\"list2\", i))  \n\nexcept AttributeError:\n  self.midi_cc_ch_15_val_39.send_value(66)\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=18","custom_lom_listener":"","selectionObj":{"id":"left","name":"Left was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"37","tokenisedCode":"self.midi_cc_ch_15_val_37","valueType":"int","value":"control_id=18","desc":"Left was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":18,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":8,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Right Bank","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n  \n  if n == 1 and len(y) == 2 and y[1] == 45:\n      self._send_midi(((m + 203), 0, 0))\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  right = self.midi_cc_ch_15_val_38.cur_val\nexcept AttributeError:\n  return\n\nb = (total -1) \/ 16\nc = int(b)\n\n\"\"\" Calculate total of Banks \"\"\"\nif b > c:\n  c = c + 1\n\nx = a + 1\n\nif x > c:\n   x = c\n\n\"\"\" Set Bank in Modifier 20 \"\"\"\nif right == 127:\n  if x <= 1:\n    self.set_modifier_value(\"m20\", 1)\n    name = self.song().view.selected_track.view.selected_device.name\n    text = str(name) + str(\": \") + str(\"Bank 1\")\n    sendSysex(39, 2, text)\n  else:\n    self.set_modifier_value(\"m20\", x)\n    name = self.song().view.selected_track.view.selected_device.name\n    text = str(name) + str(\": \") + str(\"Bank \") + str(x)\n    sendSysex(39, 2, text)\n\n\"\"\" Set parameters names \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  parameters = self.song().view.selected_track.view.selected_device.parameters\n  a = self.get_modifier_value(\"m20\")\n\n  b = 15\n  x = (a * 16) - b\n  self.clear_list(\"list1\")\n  self.clear_list(\"list2\")\n  self.clear_list(\"list3\")\n  \n  for i in range(17):\n    self.add_to_list(\"list1\", \"-\", i)\n    self.add_to_list(\"list2\", \"-\", i)\n    self.add_to_list(\"list3\", 0.0, i)\n\n  for index, item in enumerate(parameters):\n    x = (a * 16) - b\n    if index == x:\n        name = self.song().view.selected_track.view.selected_device.parameters[x].name\n        value = self.song().view.selected_track.view.selected_device.parameters[x].value\n        valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(value) \n        \n        pos = 15 - b\n        \n        self.add_to_list(\"list1\", name, pos)\n        self.add_to_list(\"list2\", valueString, pos)\n        self.add_to_list(\"list3\", value, pos)\n\n        if b == 0:\n           break\n        b = b - 1\n  \n  for i in range(1, 17):\n     \"\"\"self.log_message(\"csslog: \" + str(self.get_list_item(\"list1\", i)))\"\"\"\n     self.set_modifier_value(\"m18\", False)\n     self.set_modifier_value(\"m\" + str(i), self.get_list_item(\"list3\", i))\n     sendSysex( (i + 20), 0, self.get_list_item(\"list1\", i))  \n     sendSysex( (i + 20), 1, self.get_list_item(\"list2\", i))  \n\nexcept AttributeError:\n  self.midi_cc_ch_15_val_39.send_value(66)\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=19","custom_lom_listener":"","selectionObj":{"id":"right","name":"Right was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"38","tokenisedCode":"self.midi_cc_ch_15_val_38","valueType":"int","value":"control_id=19","desc":"Right was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":19,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":21,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Script Initialize","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nAudioSwift Control Script Version 1.3\n\nUses MIDI channel 16\n\nUse CCs from 21 to 36 for sliders\nUse CCs 37 and 38 for moving banks and devices\nUse CC 39 for communication in Ableton and AudioSwift.\nUse CC 40 to 41 for left and right track.\nUse CC 42 for setting labels of drum rack in AudioSwift\nUse CC 119 for recalling snapshots\n\nCC37 = 127 changes bank to the left\nCC37 = 65 changes device to the left\nCC38 = 127 changes bank to the right\nCC38 = 65 changes device to the right\n\nCC39 = 65 sets the Bank A in the AudioSwift Console\nCC39 = 66 sends a message to AudioSwift that no device is selected.\nCC39 = 127 callback from AudioSwift.\nCC40 = 127 left track\nCC41 = 127 right track\nCC42 = 0 to 127 for setting labels of drum rack in AudioSwift\nCC119 = 127 from AudioSwift to recall Snapshots\n\nFor default values, it sends a value = 0 on each slider\n\nM20 tells the currently Bank in Ableton.\nM19 saves the ASCII table\nM18 bool lets know if the modifier can send a sysex message to AudioSwift\nM17 saves the ASCII-Ext table\n\nList 1 sets the names of parameters\nList 2 sets the current string values of parameters\nList 3 sets the current float values of parameters\n\nF0 00 00 66 10 xx yy F7 is the header of sysex messages\nxx = 00 is for labels\nxx = 01 is for parameters values\nxx = 02 is for device name and bank\nxx = 03 is for drumpads labels\nyy = the corresponding CC number 21 - 36 | 39 for device name\nF7 is exit\n\"\"\"\n\n\n\"\"\" Extended ASCII \"\"\"\nascii_ext = {138: 83, 140: 79, 142: 90, 156: 111, 158: 122, 159: 89, 192: 65, 193: 65, 194: 65, 195: 65, 196: 65, 197: 65, 198: 65, 199: 67, 200: 69, 201: 69, 202: 69, 203: 69, 204: 73, 205: 73, 206: 73, 207: 73, 208: 68, 209: 78, 210: 79, 211: 79, 212: 79, 213: 79, 214: 79, 215: 120, 216: 79, 217: 85, 218: 85, 219: 85, 220: 85, 221: 89, 223: 66, 224: 97, 225: 97, 226: 97, 227: 97, 228: 97, 229: 97, 230: 97, 231: 99, 232: 101, 233: 101, 234: 101, 235: 101, 236: 105, 237: 105, 238: 105, 239: 105, 240: 111, 241: 110, 242: 111, 243: 111, 244: 111, 245: 111, 246: 111, 247: 47, 248: 111, 249: 117, 250: 117, 251: 117, 252: 117, 253: 121, 255: 121}\n\nself.set_modifier_value(\"m17\", ascii_ext)\n\nself.set_modifier_value(\"m20\", 1)\nself.show_message(\"AudioSwift Control Version: 1.3\")\n\nascii_dict = dict()\nascii_in_number = range(0,256)\nfor i in ascii_in_number:\n    ascii_dict[chr(i)] = i\n\nself.set_modifier_value(\"m19\", ascii_dict)\nself.set_modifier_value(\"m18\", False)\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\nfor i in range(1, 17):\n  self.set_modifier_value(\"m18\", False)\n  self.set_modifier_value(\"m\" + str(i), 0.0)\n  sendSysex( (i + 20), 0, \"-\")\n  sendSysex( (i + 20), 1, \"-\")\n\nself.midi_cc_ch_15_val_39.send_value(65)\n\ntry:\n    a = self.get_modifier_value(\"m20\")\n    name = self.song().view.selected_track.view.selected_device.name\n    text = str(name) + str(\": \") + str(\"Bank \") + str(a)\n    sendSysex(39, 2, text)\nexcept AttributeError:\n  self.midi_cc_ch_15_val_39.send_value(66)\n  return\n\n","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"reaction_name\":\"script_was_initialised\"}","custom_lom_listener":"","selectionObj":{"id":"script_was_initialised","reaction_name":"script_was_initialised","name":"script is initialised","include_mode_id":"n","include_param2":"n","description":"When the script is first initialised, note: this listener is not mode specific (it will always fire when the script is loaded regardless of the active mode)"},"selectionMenuName":"scriptListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":22,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Select Track","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"self.set_modifier_value(\"m20\", 1)\n\n\"\"\"\nself.log_message(\"csslog: \" + str(total))\ntotal = len(self.song().view.selected_track.view.selected_device.parameters)\n\nself.song().view.selected_track.devices\nself.get_selected_device_num(\"view.selected_track\")\nself.song().view.select_device(self.song().view.selected_track.devices[0])\n\"\"\"\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n  \n  if n == 1 and len(y) == 2 and y[1] == 45:\n      self._send_midi(((m + 203), 0, 0))\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\ntry:\n  devices = len(self.song().view.selected_track.devices)\n  x = self.get_selected_device_num(\"view.selected_track\")\n\n  if devices != 0:\n    x = self.get_selected_device_num(\"view.selected_track\")\n    if str(x) == \"False\":\n      self.song().view.select_device(self.song().view.selected_track.devices[0])\n    \n    name = self.song().view.selected_track.view.selected_device.name\n    text = str(name) + str(\": \") + str(\"Bank 1\")\n    self.show_message(text)\n    sendSysex( 39, 2, text)\n      \n\nexcept AttributeError:\n  return\n\n\"\"\" Set parameters names \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  parameters = self.song().view.selected_track.view.selected_device.parameters\n  a = self.get_modifier_value(\"m20\")\n\n  b = 15\n  x = (a * 16) - b\n  self.clear_list(\"list1\")\n  self.clear_list(\"list2\")\n  self.clear_list(\"list3\")\n  \n  for i in range(17):\n    self.add_to_list(\"list1\", \"-\", i)\n    self.add_to_list(\"list2\", \"-\", i)\n    self.add_to_list(\"list3\", 0.0, i)\n\n  for index, item in enumerate(parameters):\n    x = (a * 16) - b\n    if index == x:\n        name = self.song().view.selected_track.view.selected_device.parameters[x].name\n        value = self.song().view.selected_track.view.selected_device.parameters[x].value\n        valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(value) \n        \n        pos = 15 - b\n        \n        self.add_to_list(\"list1\", name, pos)\n        self.add_to_list(\"list2\", valueString, pos)\n        self.add_to_list(\"list3\", value, pos)\n\n        if b == 0:\n           break\n        b = b - 1\n  \n  for i in range(1, 17):\n     \"\"\"self.log_message(\"csslog: \" + str(self.get_list_item(\"list1\", i)))\"\"\"\n     self.set_modifier_value(\"m18\", False)\n     self.set_modifier_value(\"m\" + str(i), self.get_list_item(\"list3\", i))\n     sendSysex( (i + 20), 0, self.get_list_item(\"list1\", i))  \n     sendSysex( (i + 20), 1, self.get_list_item(\"list2\", i))  \n\nexcept AttributeError:\n  self.midi_cc_ch_15_val_39.send_value(66)\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"lom_name={\"id\":\"song_view_selected_track\",\"name\":\"selected track\",\"cat\":\"Song\",\"parent\":\"Song View\",\"tokenisedCode\":\"self.song().view.add_selected_track_listener\",\"extraFields\":[],\"code\":\"self.song().view.add_selected_track_listener\",\"desc\":\"selected track has changed\",\"dev\":\"called as soon as the property \\\"selected_track\\\" has changed\"}","custom_lom_listener":"self.song().view.add_selected_track_listener","selectionObj":{"id":"song_view_selected_track","name":"selected track","cat":"Song","parent":"Song View","tokenisedCode":"self.song().view.add_selected_track_listener","extraFields":[],"code":"self.song().view.add_selected_track_listener","desc":"selected track has changed","dev":"called as soon as the property \"selected_track\" has changed"},"selectionMenuName":"ListenerLom","code":"self.song().view.add_selected_track_listener","extraFields":[]},{"set_to_custom":false,"reaction_listener":"lom_name={\"id\":\"song_tracks\",\"name\":\"tracks\",\"cat\":\"Song\",\"parent\":\"Song\",\"tokenisedCode\":\"self.song().add_tracks_listener\",\"extraFields\":[],\"code\":\"self.song().add_tracks_listener\",\"desc\":\"a Track has been added, moved or deleted\",\"dev\":\"called as soon as the property \\\"tracks\\\" has changed\"}","custom_lom_listener":"self.song().add_tracks_listener","selectionObj":{"id":"song_tracks","name":"tracks","cat":"Song","parent":"Song","tokenisedCode":"self.song().add_tracks_listener","extraFields":[],"code":"self.song().add_tracks_listener","desc":"a Track has been added, moved or deleted","dev":"called as soon as the property \"tracks\" has changed"},"selectionMenuName":"ListenerLom","code":"self.song().add_tracks_listener","extraFields":[]}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":46,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Select Track Left","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  tracks = self.get_num_of_tracks(\"tracks\")\n  x = self.get_selected_track_num()\n  left = self.midi_cc_ch_15_val_40.cur_val\n  if tracks > 1 and str(x) != \"False\":\n    if left == 127:\n      num = x - 1\n      if num <= 0:\n        self.set_highlighted_track(0)\n      else:\n        self.set_highlighted_track(num)\n    \nexcept AttributeError:\n  self.midi_cc_ch_15_val_39.send_value(66)\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=21","custom_lom_listener":"","selectionObj":{"id":"left_track","name":"Left Track was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"40","tokenisedCode":"self.midi_cc_ch_15_val_40","valueType":"int","value":"control_id=21","desc":"Left Track was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":21,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":47,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Select Track Right","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  tracks = self.get_num_of_tracks(\"tracks\")\n  x = self.get_selected_track_num()\n  right = self.midi_cc_ch_15_val_41.cur_val\n  if tracks > 1 and str(x) != \"False\":\n    if right == 127:\n      num = x + 1\n      if num >= tracks:\n        self.set_highlighted_track(x)\n      else:\n        self.set_highlighted_track(num)\n    \nexcept AttributeError:\n  self.midi_cc_ch_15_val_39.send_value(66)\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=22","custom_lom_listener":"","selectionObj":{"id":"right_track","name":"Right Track was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"41","tokenisedCode":"self.midi_cc_ch_15_val_41","valueType":"int","value":"control_id=22","desc":"Right Track was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":22,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":23,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Select Device","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"self.set_modifier_value(\"m20\", 1)\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  if n == 1 and len(y) == 2 and y[1] == 45:\n      self._send_midi(((m + 203), 0, 0))\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\ntry:\n  devices = len(self.song().view.selected_track.devices)\n  x = self.get_selected_device_num(\"view.selected_track\")\n\n  if devices != 0:\n    x = self.get_selected_device_num(\"view.selected_track\")\n    \n    name = self.song().view.selected_track.view.selected_device.name\n    text = str(name) + str(\": \") + str(\"Bank 1\")\n    sendSysex(39, 2, text)\n      \nexcept AttributeError:\n  return\n\n\n\"\"\" Set parameters names \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  parameters = self.song().view.selected_track.view.selected_device.parameters\n  a = self.get_modifier_value(\"m20\")\n\n  b = 15\n  x = (a * 16) - b\n  self.clear_list(\"list1\")\n  self.clear_list(\"list2\")\n  self.clear_list(\"list3\")\n  \n  for i in range(17):\n    self.add_to_list(\"list1\", \"-\", i)\n    self.add_to_list(\"list2\", \"-\", i)\n    self.add_to_list(\"list3\", 0.0, i)\n\n  for index, item in enumerate(parameters):\n    x = (a * 16) - b\n    if index == x:\n        name = self.song().view.selected_track.view.selected_device.parameters[x].name\n        value = self.song().view.selected_track.view.selected_device.parameters[x].value\n        valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(value) \n        \n        pos = 15 - b\n        \n        self.add_to_list(\"list1\", name, pos)\n        self.add_to_list(\"list2\", valueString, pos)\n        self.add_to_list(\"list3\", value, pos)\n\n        if b == 0:\n           break\n        b = b - 1\n  \n  for i in range(1, 17):\n     self.set_modifier_value(\"m18\", False)\n     self.set_modifier_value(\"m\" + str(i), self.get_list_item(\"list3\", i))   \n     sendSysex( (i + 20), 0, self.get_list_item(\"list1\", i))\n     sendSysex( (i + 20), 1, self.get_list_item(\"list2\", i))\n  \nexcept AttributeError:\n  self.midi_cc_ch_15_val_39.send_value(66)\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"lom_name={\"id\":\"track_selected_device\",\"name\":\"selected device\",\"cat\":\"Track\",\"parent\":\"Track\",\"tokenisedCode\":\"self.song().#tracks#.view.add_selected_device_listener\",\"extraFields\":[\"tracks\",\"track_num\"],\"code\":\"self.song().tracks[0].view.add_selected_device_listener\",\"desc\":\"selected device has changed\",\"dev\":\"called as soon as the property \\\"selected_device\\\" has changed\"}","custom_lom_listener":"self.song().view.selected_track.view.add_selected_device_listener","selectionObj":{"id":"track_selected_device","name":"selected device","cat":"Track","parent":"Track","tokenisedCode":"self.song().#tracks#.view.add_selected_device_listener","extraFields":["tracks","track_num"],"code":"self.song().tracks[0].view.add_selected_device_listener","desc":"selected device has changed","dev":"called as soon as the property \"selected_device\" has changed"},"selectionMenuName":"ListenerLom","code":"self.song().#tracks#.view.add_selected_device_listener","extraFields":[{"id":"tracks","name":"Track Type","desc":null,"used in functions (for reference only)":null,"placeholder":null,"buttonDisplayName":"selected track","defaultType":"select","type":"select","include_range_value_option":"y","value":"view.selected_track","strReplace":"#tracks#","tweakVal":null,"isOptional":null,"includeTheseMenus":["extraFieldSelectOptions","modifierList"],"selectionOptions":["_track","_visible_track","_relative_track","_visible_and_relative_track","_return","_selected_track","_master"],"displayIf":null},{"id":"track_num","name":"Track Number","desc":null,"used in functions (for reference only)":null,"placeholder":1,"buttonDisplayName":null,"defaultType":"number","type":"number","include_range_value_option":"y","value":"1","strReplace":"#track-num#","tweakVal":-1,"isOptional":null,"includeTheseMenus":["modifierList","customCode"],"selectionOptions":[],"displayIf":"_track, _visible_track, _relative_track, _visible_and_relative_track, _return"}]}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":40,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Select Device after added","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"self.set_modifier_value(\"m20\", 1)\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n  \n  if n == 1 and len(y) == 2 and y[1] == 45:\n      self._send_midi(((m + 203), 0, 0))\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\ntry:\n  devices = len(self.song().view.selected_track.devices)\n  x = self.get_selected_device_num(\"view.selected_track\")\n\n  if devices != 0:\n    x = self.get_selected_device_num(\"view.selected_track\")\n    \n    name = self.song().view.selected_track.view.selected_device.name\n    text = str(name) + str(\": \") + str(\"Bank 1\")\n    sendSysex(39, 2, text)\n      \nexcept AttributeError:\n  return\n\n\n\"\"\" Set parameters names \"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  parameters = self.song().view.selected_track.view.selected_device.parameters\n  a = self.get_modifier_value(\"m20\")\n\n  b = 15\n  x = (a * 16) - b\n  self.clear_list(\"list1\")\n  self.clear_list(\"list2\")\n  self.clear_list(\"list3\")\n  \n  for i in range(17):\n    self.add_to_list(\"list1\", \"-\", i)\n    self.add_to_list(\"list2\", \"-\", i)\n    self.add_to_list(\"list3\", 0.0, i)\n\n  for index, item in enumerate(parameters):\n    x = (a * 16) - b\n    if index == x:\n        name = self.song().view.selected_track.view.selected_device.parameters[x].name\n        value = self.song().view.selected_track.view.selected_device.parameters[x].value\n        valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(value) \n        \n        pos = 15 - b\n        \n        self.add_to_list(\"list1\", name, pos)\n        self.add_to_list(\"list2\", valueString, pos)\n        self.add_to_list(\"list3\", value, pos)\n\n        if b == 0:\n           break\n        b = b - 1\n  \n  for i in range(1, 17):\n     \"\"\"self.log_message(\"csslog: \" + str(self.get_list_item(\"list1\", i)))\"\"\"\n     self.set_modifier_value(\"m18\", False)\n     self.set_modifier_value(\"m\" + str(i), self.get_list_item(\"list3\", i))\n     sendSysex( (i + 20), 0, self.get_list_item(\"list1\", i))  \n     sendSysex( (i + 20), 1, self.get_list_item(\"list2\", i))  \n\nexcept AttributeError:\n  self.midi_cc_ch_15_val_39.send_value(66)\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"lom_name={\"id\":\"track_devices\",\"name\":\"devices\",\"cat\":\"Track\",\"parent\":\"Track\",\"tokenisedCode\":\"self.song().#tracks#.add_devices_listener\",\"extraFields\":[\"tracks\",\"track_num\"],\"code\":\"self.song().tracks[0].add_devices_listener\",\"desc\":\"devices has changed\",\"dev\":\"called as soon as the property \\\"devices\\\" has changed\"}","custom_lom_listener":"self.song().view.selected_track.add_devices_listener","selectionObj":{"id":"track_devices","name":"devices","cat":"Track","parent":"Track","tokenisedCode":"self.song().#tracks#.add_devices_listener","extraFields":["tracks","track_num"],"code":"self.song().tracks[0].add_devices_listener","desc":"devices has changed","dev":"called as soon as the property \"devices\" has changed"},"selectionMenuName":"ListenerLom","code":"self.song().#tracks#.add_devices_listener","extraFields":[{"id":"tracks","name":"Track Type","desc":null,"used in functions (for reference only)":null,"placeholder":null,"buttonDisplayName":"selected track","defaultType":"select","type":"select","include_range_value_option":"y","value":"view.selected_track","strReplace":"#tracks#","tweakVal":null,"isOptional":null,"includeTheseMenus":["extraFieldSelectOptions","modifierList"],"selectionOptions":["_track","_visible_track","_relative_track","_visible_and_relative_track","_return","_selected_track","_master"],"displayIf":null},{"id":"track_num","name":"Track Number","desc":null,"used in functions (for reference only)":null,"placeholder":1,"buttonDisplayName":null,"defaultType":"number","type":"number","include_range_value_option":"y","value":"1","strReplace":"#track-num#","tweakVal":-1,"isOptional":null,"includeTheseMenus":["modifierList","customCode"],"selectionOptions":[],"displayIf":"_track, _visible_track, _relative_track, _visible_and_relative_track, _return"}]}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":44,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Select Device Left","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  devices = len(self.song().view.selected_track.devices)\n  x = self.get_selected_device_num(\"view.selected_track\")\n  left = self.midi_cc_ch_15_val_37.cur_val\n  if devices > 1:\n    x = self.get_selected_device_num(\"view.selected_track\")\n    \n    if left == 65:\n      num = x - 1\n      if num <= 0:\n        self.song().view.select_device(self.song().view.selected_track.devices[0])\n      else:\n        self.song().view.select_device(self.song().view.selected_track.devices[num])\n      self.set_modifier_value(\"m20\", 1)   \n    \nexcept AttributeError:\n  self.midi_cc_ch_15_val_39.send_value(66)\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=18","custom_lom_listener":"","selectionObj":{"id":"left","name":"Left was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"37","tokenisedCode":"self.midi_cc_ch_15_val_37","valueType":"int","value":"control_id=18","desc":"Left was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":18,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":45,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Select Device Right","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  devices = len(self.song().view.selected_track.devices)\n  x = self.get_selected_device_num(\"view.selected_track\")\n  right = self.midi_cc_ch_15_val_38.cur_val\n  if devices > 1:\n    x = self.get_selected_device_num(\"view.selected_track\")\n      \n    if right == 65:\n      num = x + 1\n      if num >= devices:\n        self.song().view.select_device(self.song().view.selected_track.devices[(devices - 1)])\n      else:\n        self.song().view.select_device(self.song().view.selected_track.devices[num])\n      self.set_modifier_value(\"m20\", 1)\n    \nexcept AttributeError:\n  self.midi_cc_ch_15_val_39.send_value(66)\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=19","custom_lom_listener":"","selectionObj":{"id":"right","name":"Right was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"38","tokenisedCode":"self.midi_cc_ch_15_val_38","valueType":"int","value":"control_id=19","desc":"Right was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":19,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":43,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"Bank Changed to 1","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"self.midi_cc_ch_15_val_39.send_value(65)\n","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m20\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m20","name":"m20 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m20\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m20","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":41,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"AudioSwift is On","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n  \n  if n == 1 and len(y) == 2 and y[1] == 45:\n      self._send_midi(((m + 203), 0, 0))\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\"\"\" Set parameters names \"\"\"\n\ntry:\n  button = slider = self.midi_cc_ch_15_val_39.cur_val\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  parameters = self.song().view.selected_track.view.selected_device.parameters\n  a = self.get_modifier_value(\"m20\")\n\n  if button == 127:\n\n    name = self.song().view.selected_track.view.selected_device.name\n    text = str(name) + str(\": \") + str(\"Bank \") + str(a)\n    sendSysex(39, 2, text)\n\n    b = 15\n    x = (a * 16) - b\n    self.clear_list(\"list1\")\n    self.clear_list(\"list2\")\n    self.clear_list(\"list3\")\n  \n    for i in range(17):\n      self.add_to_list(\"list1\", \"-\", i)\n      self.add_to_list(\"list2\", \"-\", i)\n      self.add_to_list(\"list3\", 0.0, i)\n\n    for index, item in enumerate(parameters):\n      x = (a * 16) - b\n      if index == x:\n          name = self.song().view.selected_track.view.selected_device.parameters[x].name\n          value = self.song().view.selected_track.view.selected_device.parameters[x].value\n          valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(value) \n        \n          pos = 15 - b\n        \n          self.add_to_list(\"list1\", name, pos)\n          self.add_to_list(\"list2\", valueString, pos)\n          self.add_to_list(\"list3\", value, pos)\n\n          if b == 0:\n             break\n          b = b - 1\n  \n    for i in range(1, 17):\n       \"\"\"self.log_message(\"csslog: \" + str(self.get_list_item(\"list1\", i)))\"\"\"\n       self.set_modifier_value(\"m18\", False)\n       self.set_modifier_value(\"m\" + str(i), self.get_list_item(\"list3\", i))\n       sendSysex( (i + 20), 0, self.get_list_item(\"list1\", i))  \n       sendSysex( (i + 20), 1, self.get_list_item(\"list2\", i))  \n\nexcept AttributeError:\n  self.midi_cc_ch_15_val_39.send_value(66)\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}],"showLoop":true}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=20","custom_lom_listener":"","selectionObj":{"id":"callback","name":"Callback was moved","MIDI_type":"cc","MIDI_channel":15,"MIDI_value":"39","tokenisedCode":"self.midi_cc_ch_15_val_39","valueType":"int","value":"control_id=20","desc":"Callback was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":20,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":24,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M1 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(\"M1:     \") + str(self.get_modifier_value(\"m1\")))\nF0 00 00 66 10 01\n\"\"\"\n\n\nvalueString = \"-\"  \n\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 15\n  if x >= total:\n    x = 0\n\n  \n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 224\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [21]\n  \n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((224, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m1\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m1","name":"m1 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m1\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m1","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":25,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M2 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 14\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 225\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [22]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((225, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)\n  ","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m2\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m2","name":"m2 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m2\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m2","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":26,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M3 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 13\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 226\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [23]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((226, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m3\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m3","name":"m3 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m3\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m3","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":27,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M4 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 12\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 227\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [24]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((227, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m4\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m4","name":"m4 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m4\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m4","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":28,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M5 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 11\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 228\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [25]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((228, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m5\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m5","name":"m5 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m5\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m5","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":29,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M6 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 10\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 229\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [26]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((229, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m6\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m6","name":"m6 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m6\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m6","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":30,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M7 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 9\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 230\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [27]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((230, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m7\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m7","name":"m7 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m7\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m7","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":31,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M8 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 8\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 231\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [28]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((231, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m8\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m8","name":"m8 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m8\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m8","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":32,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M9 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 7\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 232\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [29]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((232, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m9\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m9","name":"m9 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m9\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m9","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":33,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M10 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\n\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 6\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 233\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [30]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((233, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m10\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m10","name":"m10 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m10\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m10","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":34,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M11 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 5\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 234\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [31]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((234, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m11\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m11","name":"m11 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m11\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m11","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":35,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M12 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 4\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 235\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [32]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((235, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m12\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m12","name":"m12 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m12\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m12","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":36,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M13 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 3\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 236\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [33]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((236, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m13\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m13","name":"m13 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m13\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m13","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":37,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M14 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 2\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 237\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [34]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((237, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m14\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m14","name":"m14 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m14\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m14","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":38,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M15 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 1\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 238\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [35]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((238, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m15\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m15","name":"m15 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m15\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m15","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1},{"level":1,"has_child":0,"id":42,"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"fa-comments"},"parent_id":1,"name":"M16 Updated","LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"valueString = \"-\"\n\n\"\"\" Calculate parameter number in Bank an send value as pitchbend\"\"\"\ntry:\n  total = len(self.song().view.selected_track.view.selected_device.parameters)\n  a = self.get_modifier_value(\"m20\")\n  x = (a * 16) - 0\n  if x >= total:\n    x = 0\n\n  max = self.song().view.selected_track.view.selected_device.parameters[x].max\n  min = self.song().view.selected_track.view.selected_device.parameters[x].min\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = self.song().view.selected_track.view.selected_device.parameters[x].value\n  valueString = self.song().view.selected_track.view.selected_device.parameters[x].str_for_value(oldValue)\n  \n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n    \n    intValue = int(newValue)\n    pb = 239\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n\nexcept AttributeError:\n  return\n\n\n\"\"\"Get string value to send to AudioSwift in sysex\"\"\"\nif self.get_modifier_value(\"m18\") == True:\n  ascii = self.get_modifier_value(\"m19\")\n  asciiExt = self.get_modifier_value(\"m17\")\n\n  sysex = (240, 0, 0, 102, 16, 1)\n  exit = (247,)\n  m = [36]\n\n  for i in valueString:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    m.append(x)\n\n  if len(m) == 1:\n    m.append(45)\n    self._send_midi((239, 0, 0))\n\n  sysex = sysex + tuple(m) + exit\n  self._send_midi(sysex)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"param2\":\"m16\",\"reaction_name\":\"modifier_was_updated\"}","custom_lom_listener":"","selectionObj":{"id":"m16","name":"m16 modifier was updated","tokenisedCode":"self.get_modifier_value(\"m16\")","initialValue":0,"cat":"modifier","valueType":"all","reaction_name":"modifier_was_updated","param2":"m16","include_mode_id":"y","include_param_2":"y"},"selectionMenuName":"modifierListListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":20,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":17,"get_mode_name":"Control Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","chips":[],"mode_id":1}]