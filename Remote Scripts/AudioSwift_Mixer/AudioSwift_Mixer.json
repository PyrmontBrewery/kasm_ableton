[{"id":0,"type":"script","device_selection_follows_track_selection":true,"global_feedback":"default","global_feedback_active":"False","global_LED_on":127,"global_LED_off":0,"name":"AudioSwift Mixer","script_id":2,"script_attach_id":49640,"modifiers":[{"id":"m1","name":"m1","tokenisedCode":"self.get_modifier_value(\"m1\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m2","name":"m2","tokenisedCode":"self.get_modifier_value(\"m2\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m3","name":"m3","tokenisedCode":"self.get_modifier_value(\"m3\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m4","name":"m4","tokenisedCode":"self.get_modifier_value(\"m4\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m5","name":"m5","tokenisedCode":"self.get_modifier_value(\"m5\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m6","name":"m6","tokenisedCode":"self.get_modifier_value(\"m6\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m7","name":"m7","tokenisedCode":"self.get_modifier_value(\"m7\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m8","name":"m8","tokenisedCode":"self.get_modifier_value(\"m8\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m9","name":"m9","tokenisedCode":"self.get_modifier_value(\"m9\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m10","name":"m10","tokenisedCode":"self.get_modifier_value(\"m10\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m11","name":"m11","tokenisedCode":"self.get_modifier_value(\"m11\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m12","name":"m12","tokenisedCode":"self.get_modifier_value(\"m12\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m13","name":"m13","tokenisedCode":"self.get_modifier_value(\"m13\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m14","name":"m14","tokenisedCode":"self.get_modifier_value(\"m14\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m15","name":"m15","tokenisedCode":"self.get_modifier_value(\"m15\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m16","name":"m16","tokenisedCode":"self.get_modifier_value(\"m16\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m17","name":"m17","tokenisedCode":"self.get_modifier_value(\"m17\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m18","name":"m18","tokenisedCode":"self.get_modifier_value(\"m18\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m19","name":"m19","tokenisedCode":"self.get_modifier_value(\"m19\")","initialValue":0,"cat":"modifier","valueType":"all"},{"id":"m20","name":"m20","tokenisedCode":"self.get_modifier_value(\"m20\")","initialValue":0,"cat":"modifier","valueType":"all"}],"lists":[{"id":"list1","name":"list1","tokenisedCode":"self.get_list(\"list1\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list2","name":"list2","tokenisedCode":"self.get_list(\"list2\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list3","name":"list3","tokenisedCode":"self.get_list(\"list3\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list4","name":"list4","tokenisedCode":"self.get_list(\"list4\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list5","name":"list5","tokenisedCode":"self.get_list(\"list5\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list6","name":"list6","tokenisedCode":"self.get_list(\"list6\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list7","name":"list7","tokenisedCode":"self.get_list(\"list7\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list8","name":"list8","tokenisedCode":"self.get_list(\"list8\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list9","name":"list9","tokenisedCode":"self.get_list(\"list9\")","initialValue":"[]","cat":"custom list","valueType":"list"},{"id":"list10","name":"list10","tokenisedCode":"self.get_list(\"list10\")","initialValue":"[]","cat":"custom list","valueType":"list"}],"errors":"","allChips":[],"python_version":"3"},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Script Initialization","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nAudioSwift Mixer Script Version 1.0\n\nUses MIDI channel 15\n\nCC21 TrackA\nCC22 TrackB\nCC23 Panning\nCC24 Solo\nCC25 Mute\nCC26 Arm Record\nCC27 Master\nCC28 to CC 39 Sends from 1 to 12\nCC40 Send Count\nCC41 Send On Off (doesn't work)\nCC42 Play\nCC43 Stop\nCC44 Global Record\nCC45 Session Record\nCC46 Jog Wheel\nCC47 Cycle\nCC48 Metronome\nCC49 Overdub\nCC50 Automation\nCC51 Capture\nCC52 Punch\nCC53 Quantize\nCC54 Rec Quantization\nCC55 Callback\nCC56 Move Track\nCC57 Selected Parameter\n\nM20 saves the ASCII table\nM19 saves the ASCII-Ext table\nM18 bool lets know if the modifier can send a sysex message to AudioSwift\n\nM1 Track A\nM2 Track B\nM3 Panning\nM4 Master\nM5 SendCount\nM6 Selected Parameter\n\nF0 00 00 66 10 xx yy F7 is the header of sysex messages\nxx = 00 is for labels\nxx = 01 is for parameters values\nyy = the corresponding CC number\nF7 is exit\n\nPB1 to PB12 Sends\nPB13 TrackA\nPB14 TrackB\nPB15 Master\nPB16 Selected Parameter\n\n\n\"\"\"\n\n\"\"\" Extended ASCII \"\"\"\nascii_ext = {138: 83, 140: 79, 142: 90, 156: 111, 158: 122, 159: 89, 192: 65, 193: 65, 194: 65, 195: 65, 196: 65, 197: 65, 198: 65, 199: 67, 200: 69, 201: 69, 202: 69, 203: 69, 204: 73, 205: 73, 206: 73, 207: 73, 208: 68, 209: 78, 210: 79, 211: 79, 212: 79, 213: 79, 214: 79, 215: 120, 216: 79, 217: 85, 218: 85, 219: 85, 220: 85, 221: 89, 223: 66, 224: 97, 225: 97, 226: 97, 227: 97, 228: 97, 229: 97, 230: 97, 231: 99, 232: 101, 233: 101, 234: 101, 235: 101, 236: 105, 237: 105, 238: 105, 239: 105, 240: 111, 241: 110, 242: 111, 243: 111, 244: 111, 245: 111, 246: 111, 247: 47, 248: 111, 249: 117, 250: 117, 251: 117, 252: 117, 253: 121, 255: 121}\n\nself.set_modifier_value(\"m19\", ascii_ext)\n\nascii_dict = dict()\nascii_in_number = range(0,256)\nfor i in ascii_in_number:\n    ascii_dict[chr(i)] = i\n\nself.set_modifier_value(\"m20\", ascii_dict)\nself.set_modifier_value(\"m5\", 1)\n\nself.show_message(\"AudioSwift Mixer Version: 1.0\")\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}},{"full_code":"def sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\ndef sendCC( status, data1, data2 ):\n  message = (status, data1, data2)\n  self._send_midi(message)\n  return\n\n\n\"\"\" Volume TrackA\"\"\"\ntry:\n  trackA = self.song().view.selected_track.name\n\n  volumeA = self.song().view.selected_track.mixer_device.volume.value\n  volumeStringA = self.song().view.selected_track.mixer_device.volume.str_for_value(volumeA)\n  maxA = self.song().view.selected_track.mixer_device.volume.max\n  minA = self.song().view.selected_track.mixer_device.volume.min\n\n  sendSysex( 21, 0, trackA )\n  sendSysex( 21, 1, volumeStringA )\n  sendPitchBend( 236, volumeA, maxA, minA )\n\nexcept AttributeError:\n  return\n\n\"\"\" Volume TrackB\"\"\"\ntry:\n  tracks = self.get_num_of_tracks(\"tracks\")\n  x = self.get_selected_track_num()\n  b = 0\n\n  trackB = \"-\"\n  volumeB = 0.0\n  volumeStringB = \"-\"\n  maxB = 1.0\n  minB = 0.0\n\n  if tracks > 1 and str(x) != \"False\":\n    b = x + 1\n    if b <= (tracks - 1):\n\n      trackB = self.song().tracks[b].name\n      volumeB = self.song().tracks[b].mixer_device.volume.value\n      volumeStringB = self.song().tracks[b].mixer_device.volume.str_for_value(volumeB)\n      maxB = self.song().tracks[b].mixer_device.volume.max\n      minB = self.song().tracks[b].mixer_device.volume.min\n\n\n  sendSysex( 22, 0, trackB )\n  sendSysex( 22, 1, volumeStringB )\n  sendPitchBend( 237, volumeB, maxB, minB )\n\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Pan \"\"\"\ntry:\n  pan = self.song().view.selected_track.mixer_device.panning.value\n  panString = self.song().view.selected_track.mixer_device.panning.str_for_value(pan)\n\n  sendSysex( 23, 1, panString )\n\nexcept AttributeError:\n  return\n\n\"\"\" Solo Mute \"\"\"\ntry:\n  masterName = self.song().view.selected_track.name\n  if masterName != \"Master\" and masterName != \"Main\" :\n    solo = self.song().view.selected_track.solo\n    mute = self.song().view.selected_track.mute\n\n    if solo == True:\n      sendCC( 190, 24, 127 )\n    else:\n      sendCC( 190, 24, 0 )\n\n    if mute == True:\n      sendCC( 190, 25, 127 )\n    else:\n      sendCC( 190, 25, 0 )\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Arm Record \"\"\"\ntry:\n  armed = self.song().view.selected_track.can_be_armed\n  if tracks > 1 and str(x) != \"False\" and armed == True:\n    rec = self.song().view.selected_track.arm\n    if rec == True:\n      sendCC( 190, 26, 127 )\n    else:\n      sendCC( 190, 26, 0 )\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Master \"\"\"\ntry:\n  master = self.song().master_track.mixer_device.volume.value\n  masterString = self.song().master_track.mixer_device.volume.str_for_value(master)\n\n  maxM = self.song().master_track.mixer_device.volume.max\n  minM = self.song().master_track.mixer_device.volume.min\n\n  sendSysex( 27, 1, masterString )\n\n  sendPitchBend( 238, master, maxM, minM )\n\nexcept AttributeError:\n  return\n\n\"\"\" Sends \"\"\"\ntry:\n  sendCount = self.get_modifier_value(\"m5\")\n  i = sendCount - 1\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  if total > 0 and sendCount <= total:\n    sendName = self.song().view.selected_track.mixer_device.sends[i].original_name\n\n    sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n    sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n\n    maxS = self.song().view.selected_track.mixer_device.sends[i].max\n    minS = self.song().view.selected_track.mixer_device.sends[i].min\n\n    sendSysex( (28 + i), 0, sendName )\n    sendSysex( (28 + i), 1, sendStrValue )\n    sendPitchBend( (224 + i), sendValue, maxS, minS )\n\n  else:\n    sendSysex( (28 + i), 0, \"-\" )\n    sendSysex( (28 + i), 1, \"-\" )\n    sendPitchBend( (224 + i), 0.0, 1.0, 0.0 )\n\nexcept AttributeError:\n  return\n","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"script_listener={\"reaction_name\":\"script_was_initialised\"}","custom_lom_listener":"","selectionObj":{"id":"script_was_initialised","reaction_name":"script_was_initialised","name":"script is initialised","include_mode_id":"n","include_param2":"n","description":"When the script is first initialised, note: this listener is not mode specific (it will always fire when the script is loaded regardless of the active mode)"},"selectionMenuName":"scriptListeners","extraFields":[],"code":""}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":2,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Move Track","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  tracks = self.get_num_of_tracks(\"tracks\")\n  x = self.get_selected_track_num()\n  value = self.midi_cc_ch_14_val_56.cur_val\n\n\n  \"\"\" Calculate total of Banks \"\"\"\n  a = (tracks - 1) \/ 8\n  banks = int(a)\n\n  if a > banks:\n    banks = banks + 1\n\n\nexcept AttributeError:\n  return\n\ndef setBank( new ):\n  if new >= (banks * 8):\n    self.set_highlighted_track( tracks - 1)\n  elif new < 0:\n    self.set_highlighted_track(0)\n  elif new >= 0 and new <= 7:\n    self.set_highlighted_track(0)\n  elif new >= 8 and new <= 15:\n    self.set_highlighted_track(8)\n  elif new >= 16 and new <= 23:\n    self.set_highlighted_track(16)\n  elif new >= 24 and new <= 31:\n    self.set_highlighted_track(24)\n  elif new >= 32 and new <= 39:\n    self.set_highlighted_track(32)\n  elif new >= 40 and new <= 47:\n    self.set_highlighted_track(40)\n  elif new >= 48 and new <= 55:\n    self.set_highlighted_track(48)\n  elif new >= 56 and new <= 63:\n    self.set_highlighted_track(56)\n  elif new >= 64 and new <= 71:\n    self.set_highlighted_track(64)\n  elif new >= 72 and new <= 79:\n    self.set_highlighted_track(72)\n  elif new >= 80 and new <= 87:\n    self.set_highlighted_track(80)\n  elif new >= 88 and new <= 95:\n    self.set_highlighted_track(88)\n  elif new >= 96 and new <= 103:\n    self.set_highlighted_track(96)\n  elif new >= 104 and new <= 111:\n    self.set_highlighted_track(104)\n  elif new >= 112 and new <= 119:\n    self.set_highlighted_track(112)\n  elif new >= 120 and new <= 127:\n    self.set_highlighted_track(120)\n  elif new >= 128 and new <= 135:\n    self.set_highlighted_track(128)\n  elif new >= 136 and new <= 143:\n    self.set_highlighted_track(136)\n  elif new >= 144 and new <= 151:\n    self.set_highlighted_track(144)\n  elif new >= 152 and new <= 159:\n    self.set_highlighted_track(152)\n  else:\n    self.set_highlighted_track( tracks - 1 )\n  return\n\n\n\"\"\" Action \"\"\"\nif tracks > 1 and str(x) != \"False\":\n  \"\"\" Right \"\"\"\n  if value == 1 or value == 2:\n    num = x + value\n    if num >= tracks:\n      self.set_highlighted_track( x )\n    else:\n      if self.song().tracks[num].is_visible == True:\n        self.set_highlighted_track( num )\n      else:\n        num = num + 1\n        while num < tracks:\n          if self.song().tracks[num].is_visible == False:\n            num = num + 1\n          else:\n            self.set_highlighted_track( num )\n            num = tracks\n\n  if value == 3:\n    num = x + 8\n    setBank(num)\n\n  \"\"\" Left \"\"\"\n  if value == 127 or value == 126:\n    num = x - (128 - value)\n    if num <= 0:\n      self.set_highlighted_track( 0 )\n    else:\n      if self.song().tracks[num].is_visible == True:\n        self.set_highlighted_track( num )\n      else:\n        num = num - 1\n        while num > 0:\n          if self.song().tracks[num].is_visible == False:\n            num = num - 1\n          else:\n            self.set_highlighted_track( num )\n            num = 0\n\n  if value == 125:\n    num = x - 8\n    setBank(num)","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=37","custom_lom_listener":"","selectionObj":{"id":"move_track","name":"Move Track was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":56,"tokenisedCode":"self.midi_cc_ch_14_val_56","valueType":"int","value":"control_id=37","desc":"Move Track was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":37,"id":5,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Selected Track Changed","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\ndef sendCC( status, data1, data2 ):\n  message = (status, data1, data2)\n  self._send_midi(message)\n  return\n\n\n\"\"\" Volume TrackA\"\"\"\ntry:\n  trackA = self.song().view.selected_track.name\n\n  volumeA = self.song().view.selected_track.mixer_device.volume.value\n  volumeStringA = self.song().view.selected_track.mixer_device.volume.str_for_value(volumeA)\n  maxA = self.song().view.selected_track.mixer_device.volume.max\n  minA = self.song().view.selected_track.mixer_device.volume.min\n\n  sendSysex( 21, 0, trackA )\n  sendSysex( 21, 1, volumeStringA )\n  sendPitchBend( 236, volumeA, maxA, minA )\n\nexcept AttributeError:\n  return\n\n\"\"\" Volume TrackB\"\"\"\ntry:\n  tracks = self.get_num_of_tracks(\"tracks\")\n  x = self.get_selected_track_num()\n  b = 0\n\n  trackB = \"-\"\n  volumeB = 0.0\n  volumeStringB = \"-\"\n  maxB = 1.0\n  minB = 0.0\n\n  if tracks > 1 and str(x) != \"False\":\n    b = x + 1\n    if b <= (tracks - 1):\n\n      trackB = self.song().tracks[b].name\n      volumeB = self.song().tracks[b].mixer_device.volume.value\n      volumeStringB = self.song().tracks[b].mixer_device.volume.str_for_value(volumeB)\n      maxB = self.song().tracks[b].mixer_device.volume.max\n      minB = self.song().tracks[b].mixer_device.volume.min\n\n\n  sendSysex( 22, 0, trackB )\n  sendSysex( 22, 1, volumeStringB )\n  sendPitchBend( 237, volumeB, maxB, minB )\n\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Pan \"\"\"\ntry:\n  pan = self.song().view.selected_track.mixer_device.panning.value\n  panString = self.song().view.selected_track.mixer_device.panning.str_for_value(pan)\n\n  sendSysex( 23, 1, panString )\n\nexcept AttributeError:\n  return\n\n\"\"\" Solo Mute \"\"\"\ntry:\n  masterName = self.song().view.selected_track.name\n  if masterName != \"Master\" and masterName != \"Main\" :\n    solo = self.song().view.selected_track.solo\n    mute = self.song().view.selected_track.mute\n\n    if solo == True:\n      sendCC( 190, 24, 127 )\n    else:\n      sendCC( 190, 24, 0 )\n\n    if mute == True:\n      sendCC( 190, 25, 127 )\n    else:\n      sendCC( 190, 25, 0 )\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Arm Record \"\"\"\ntry:\n  armed = self.song().view.selected_track.can_be_armed\n  if tracks > 1 and str(x) != \"False\" and armed == True:\n    rec = self.song().view.selected_track.arm\n    if rec == True:\n      sendCC( 190, 26, 127 )\n    else:\n      sendCC( 190, 26, 0 )\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Master \"\"\"\ntry:\n  master = self.song().master_track.mixer_device.volume.value\n  masterString = self.song().master_track.mixer_device.volume.str_for_value(master)\n\n  maxM = self.song().master_track.mixer_device.volume.max\n  minM = self.song().master_track.mixer_device.volume.min\n\n  sendSysex( 27, 1, masterString )\n\n  sendPitchBend( 238, master, maxM, minM )\n\nexcept AttributeError:\n  return\n\n\"\"\" Sends \"\"\"\ntry:\n  sendCount = self.get_modifier_value(\"m5\")\n  i = sendCount - 1\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  if total > 0 and sendCount <= total:\n    sendName = self.song().view.selected_track.mixer_device.sends[i].original_name\n\n    sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n    sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n\n    maxS = self.song().view.selected_track.mixer_device.sends[i].max\n    minS = self.song().view.selected_track.mixer_device.sends[i].min\n\n    sendSysex( (28 + i), 0, sendName )\n    sendSysex( (28 + i), 1, sendStrValue )\n    sendPitchBend( (224 + i), sendValue, maxS, minS )\n\n  else:\n    sendSysex( (28 + i), 0, \"-\" )\n    sendSysex( (28 + i), 1, \"-\" )\n    sendPitchBend( (224 + i), 0.0, 1.0, 0.0 )\n\nexcept AttributeError:\n  return\n","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"lom_name={\"id\":\"song_view_selected_track\",\"name\":\"selected track\",\"cat\":\"Song\",\"parent\":\"Song View\",\"tokenisedCode\":\"self.song().view.add_selected_track_listener\",\"extraFields\":[],\"code\":\"self.song().view.add_selected_track_listener\",\"desc\":\"selected track has changed\",\"dev\":\"called as soon as the property \\\"selected_track\\\" has changed\"}","custom_lom_listener":"self.song().view.add_selected_track_listener","selectionObj":{"id":"song_view_selected_track","name":"selected track","cat":"Song","parent":"Song View","tokenisedCode":"self.song().view.add_selected_track_listener","extraFields":[],"code":"self.song().view.add_selected_track_listener","desc":"selected track has changed","dev":"called as soon as the property \"selected_track\" has changed"},"selectionMenuName":"ListenerLom","code":"self.song().view.add_selected_track_listener","extraFields":[]}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":43,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"New Track Added","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\ndef sendCC( status, data1, data2 ):\n  message = (status, data1, data2)\n  self._send_midi(message)\n  return\n\n\n\"\"\" Volume TrackA\"\"\"\ntry:\n  trackA = self.song().view.selected_track.name\n\n  volumeA = self.song().view.selected_track.mixer_device.volume.value\n  volumeStringA = self.song().view.selected_track.mixer_device.volume.str_for_value(volumeA)\n  maxA = self.song().view.selected_track.mixer_device.volume.max\n  minA = self.song().view.selected_track.mixer_device.volume.min\n\n  sendSysex( 21, 0, trackA )\n  sendSysex( 21, 1, volumeStringA )\n  sendPitchBend( 236, volumeA, maxA, minA )\n\nexcept AttributeError:\n  return\n\n\"\"\" Volume TrackB\"\"\"\ntry:\n  tracks = self.get_num_of_tracks(\"tracks\")\n  x = self.get_selected_track_num()\n  b = 0\n\n  trackB = \"-\"\n  volumeB = 0.0\n  volumeStringB = \"-\"\n  maxB = 1.0\n  minB = 0.0\n\n  if tracks > 1 and str(x) != \"False\":\n    b = x + 1\n    if b <= (tracks - 1):\n\n      trackB = self.song().tracks[b].name\n      volumeB = self.song().tracks[b].mixer_device.volume.value\n      volumeStringB = self.song().tracks[b].mixer_device.volume.str_for_value(volumeB)\n      maxB = self.song().tracks[b].mixer_device.volume.max\n      minB = self.song().tracks[b].mixer_device.volume.min\n\n\n  sendSysex( 22, 0, trackB )\n  sendSysex( 22, 1, volumeStringB )\n  sendPitchBend( 237, volumeB, maxB, minB )\n\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Pan \"\"\"\ntry:\n  pan = self.song().view.selected_track.mixer_device.panning.value\n  panString = self.song().view.selected_track.mixer_device.panning.str_for_value(pan)\n\n  sendSysex( 23, 1, panString )\n\nexcept AttributeError:\n  return\n\n\"\"\" Solo Mute \"\"\"\ntry:\n  masterName = self.song().view.selected_track.name\n  if masterName != \"Master\" and masterName != \"Main\" :\n    solo = self.song().view.selected_track.solo\n    mute = self.song().view.selected_track.mute\n\n    if solo == True:\n      sendCC( 190, 24, 127 )\n    else:\n      sendCC( 190, 24, 0 )\n\n    if mute == True:\n      sendCC( 190, 25, 127 )\n    else:\n      sendCC( 190, 25, 0 )\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Arm Record \"\"\"\ntry:\n  armed = self.song().view.selected_track.can_be_armed\n  if tracks > 1 and str(x) != \"False\" and armed == True:\n    rec = self.song().view.selected_track.arm\n    if rec == True:\n      sendCC( 190, 26, 127 )\n    else:\n      sendCC( 190, 26, 0 )\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Master \"\"\"\ntry:\n  master = self.song().master_track.mixer_device.volume.value\n  masterString = self.song().master_track.mixer_device.volume.str_for_value(master)\n\n  maxM = self.song().master_track.mixer_device.volume.max\n  minM = self.song().master_track.mixer_device.volume.min\n\n  sendSysex( 27, 1, masterString )\n\n  sendPitchBend( 238, master, maxM, minM )\n\nexcept AttributeError:\n  return\n\n\"\"\" Sends \"\"\"\ntry:\n  sendCount = self.get_modifier_value(\"m5\")\n  i = sendCount - 1\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  if total > 0 and sendCount <= total:\n    sendName = self.song().view.selected_track.mixer_device.sends[i].original_name\n\n    sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n    sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n\n    maxS = self.song().view.selected_track.mixer_device.sends[i].max\n    minS = self.song().view.selected_track.mixer_device.sends[i].min\n\n    sendSysex( (28 + i), 0, sendName )\n    sendSysex( (28 + i), 1, sendStrValue )\n    sendPitchBend( (224 + i), sendValue, maxS, minS )\n\n  else:\n    sendSysex( (28 + i), 0, \"-\" )\n    sendSysex( (28 + i), 1, \"-\" )\n    sendPitchBend( (224 + i), 0.0, 1.0, 0.0 )\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"lom_name={\"id\":\"song_tracks\",\"name\":\"tracks\",\"cat\":\"Song\",\"parent\":\"Song\",\"tokenisedCode\":\"self.song().add_tracks_listener\",\"extraFields\":[],\"code\":\"self.song().add_tracks_listener\",\"desc\":\"a Track has been added, moved or deleted\",\"dev\":\"called as soon as the property \\\"tracks\\\" has changed\"}","custom_lom_listener":"self.song().add_tracks_listener","selectionObj":{"id":"song_tracks","name":"tracks","cat":"Song","parent":"Song","tokenisedCode":"self.song().add_tracks_listener","extraFields":[],"code":"self.song().add_tracks_listener","desc":"a Track has been added, moved or deleted","dev":"called as soon as the property \"tracks\" has changed"},"selectionMenuName":"ListenerLom","code":"self.song().add_tracks_listener","extraFields":[]},{"set_to_custom":false,"reaction_listener":"lom_name={\"id\":\"song_return_tracks\",\"name\":\"return tracks\",\"cat\":\"Song\",\"parent\":\"Song\",\"tokenisedCode\":\"self.song().add_return_tracks_listener\",\"extraFields\":[],\"code\":\"self.song().add_return_tracks_listener\",\"desc\":\"A Return Track has been added or removed\",\"dev\":\"called as soon as the property \\\"return_tracks\\\" has changed\"}","custom_lom_listener":"self.song().add_return_tracks_listener","selectionObj":{"id":"song_return_tracks","name":"return tracks","cat":"Song","parent":"Song","tokenisedCode":"self.song().add_return_tracks_listener","extraFields":[],"code":"self.song().add_return_tracks_listener","desc":"A Return Track has been added or removed","dev":"called as soon as the property \"return_tracks\" has changed"},"selectionMenuName":"ListenerLom","code":"self.song().add_return_tracks_listener","extraFields":[]}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":45,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Callback","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\ndef sendCC( status, data1, data2 ):\n  message = (status, data1, data2)\n  self._send_midi(message)\n  return\n\n\n\"\"\" Volume TrackA\"\"\"\ntry:\n  trackA = self.song().view.selected_track.name\n\n  volumeA = self.song().view.selected_track.mixer_device.volume.value\n  volumeStringA = self.song().view.selected_track.mixer_device.volume.str_for_value(volumeA)\n  maxA = self.song().view.selected_track.mixer_device.volume.max\n  minA = self.song().view.selected_track.mixer_device.volume.min\n\n  sendSysex( 21, 0, trackA )\n  sendSysex( 21, 1, volumeStringA )\n  sendPitchBend( 236, volumeA, maxA, minA )\n\nexcept AttributeError:\n  return\n\n\"\"\" Volume TrackB\"\"\"\ntry:\n  tracks = self.get_num_of_tracks(\"tracks\")\n  x = self.get_selected_track_num()\n  b = 0\n\n  trackB = \"-\"\n  volumeB = 0.0\n  volumeStringB = \"-\"\n  maxB = 1.0\n  minB = 0.0\n\n  if tracks > 1 and str(x) != \"False\":\n    b = x + 1\n    if b <= (tracks - 1):\n\n      trackB = self.song().tracks[b].name\n      volumeB = self.song().tracks[b].mixer_device.volume.value\n      volumeStringB = self.song().tracks[b].mixer_device.volume.str_for_value(volumeB)\n      maxB = self.song().tracks[b].mixer_device.volume.max\n      minB = self.song().tracks[b].mixer_device.volume.min\n\n\n  sendSysex( 22, 0, trackB )\n  sendSysex( 22, 1, volumeStringB )\n  sendPitchBend( 237, volumeB, maxB, minB )\n\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Pan \"\"\"\ntry:\n  pan = self.song().view.selected_track.mixer_device.panning.value\n  panString = self.song().view.selected_track.mixer_device.panning.str_for_value(pan)\n\n  sendSysex( 23, 1, panString )\n\nexcept AttributeError:\n  return\n\n\"\"\" Solo Mute \"\"\"\ntry:\n  masterName = self.song().view.selected_track.name\n  if masterName != \"Master\" and masterName != \"Main\" :\n    solo = self.song().view.selected_track.solo\n    mute = self.song().view.selected_track.mute\n\n    if solo == True:\n      sendCC( 190, 24, 127 )\n    else:\n      sendCC( 190, 24, 0 )\n\n    if mute == True:\n      sendCC( 190, 25, 127 )\n    else:\n      sendCC( 190, 25, 0 )\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Arm Record \"\"\"\ntry:\n  armed = self.song().view.selected_track.can_be_armed\n  if tracks > 1 and str(x) != \"False\" and armed == True:\n    rec = self.song().view.selected_track.arm\n    if rec == True:\n      sendCC( 190, 26, 127 )\n    else:\n      sendCC( 190, 26, 0 )\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Master \"\"\"\ntry:\n  master = self.song().master_track.mixer_device.volume.value\n  masterString = self.song().master_track.mixer_device.volume.str_for_value(master)\n\n  maxM = self.song().master_track.mixer_device.volume.max\n  minM = self.song().master_track.mixer_device.volume.min\n\n  sendSysex( 27, 1, masterString )\n\n  sendPitchBend( 238, master, maxM, minM )\n\nexcept AttributeError:\n  return\n\n\"\"\" Sends \"\"\"\ntry:\n  sendCount = self.get_modifier_value(\"m5\")\n  i = sendCount - 1\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  if total > 0 and sendCount <= total:\n    sendName = self.song().view.selected_track.mixer_device.sends[i].original_name\n\n    sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n    sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n\n    maxS = self.song().view.selected_track.mixer_device.sends[i].max\n    minS = self.song().view.selected_track.mixer_device.sends[i].min\n\n    sendSysex( (28 + i), 0, sendName )\n    sendSysex( (28 + i), 1, sendStrValue )\n    sendPitchBend( (224 + i), sendValue, maxS, minS )\n\n  else:\n    sendSysex( (28 + i), 0, \"-\" )\n    sendSysex( (28 + i), 1, \"-\" )\n    sendPitchBend( (224 + i), 0.0, 1.0, 0.0 )\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Selected Parameter \"\"\"\ntry:\n  selected = self.song().view.selected_parameter.name\n\n  selectedA = self.song().view.selected_parameter.value\n  selectedStringA = self.song().view.selected_parameter.str_for_value(selectedA)\n  maxSelectedA = self.song().view.selected_parameter.max\n  minSelectedA = self.song().view.selected_parameter.min\n\n  self.set_modifier_value(\"m6\", selectedA)\n\n  sendSysex( 57, 0, selected )\n  sendSysex( 57, 1, selectedStringA )\n  sendPitchBend( 239, selectedA, maxSelectedA, minSelectedA )\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=39","custom_lom_listener":"","selectionObj":{"id":"callback","name":"Callback was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":55,"tokenisedCode":"self.midi_cc_ch_14_val_55","valueType":"int","value":"control_id=39","desc":"Callback was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":39,"id":44,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Track A","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\ntracks = self.get_num_of_tracks(\"tracks\")\nreturns = self.get_num_of_tracks(\"return_tracks\")\n\"\"\"\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\ntry:\n  trackA = self.midi_cc_ch_14_val_21.cur_val\n  enabled = self.song().view.selected_track.mixer_device.volume.is_enabled\n  m = \"m1\"\n\n  max = self.song().view.selected_track.mixer_device.volume.max\n  min = self.song().view.selected_track.mixer_device.volume.min\n\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.volume.default_value\n  self.song().view.selected_track.mixer_device.volume.value = default\n  self.set_modifier_value(m, default)\n  \n  volumeStringA = self.song().view.selected_track.mixer_device.volume.str_for_value(default)\n  sendSysex( 21, 1, volumeStringA )\n  sendPitchBend( 236, default, max, min )\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.volume.value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.volume.value = max\n    param = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.volume.value = min\n    param = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.mixer_device.volume.value = param\n    self.set_modifier_value(m, param)\n  \n  volumeStringA = self.song().view.selected_track.mixer_device.volume.str_for_value(param)\n  sendSysex( 21, 1, volumeStringA )\n  sendPitchBend( 236, param, max, min ) \n\n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( trackA )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=2","custom_lom_listener":"","selectionObj":{"id":"tracka","name":"TrackA was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":21,"tokenisedCode":"self.midi_cc_ch_14_val_21","valueType":"int","value":"control_id=2","desc":"TrackA was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":2,"id":3,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Track B","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\ntry:\n  trackB = self.midi_cc_ch_14_val_22.cur_val\n\n  tracks = self.get_num_of_tracks(\"tracks\")\n  x = self.get_selected_track_num()\n  b = 0\n  enabled = False\n  m = \"m2\"\n\n  max = 0.0\n  min = 0.0\n\n  default = 0.0\n  param = 0.0\n\n  if tracks > 1 and str(x) != \"False\":\n    b = x + 1\n    if b <= (tracks - 1):\n      if self.song().tracks[b].is_visible == False:\n        c = b + 1\n        while c < tracks:\n          if self.song().tracks[c].is_visible == False:\n            c = c + 1\n          else:\n            b = c\n            c = tracks\n      if self.song().tracks[b].is_visible == True:\n        enabled = self.song().tracks[b].mixer_device.volume.is_enabled\n        max = self.song().tracks[b].mixer_device.volume.max\n        min = self.song().tracks[b].mixer_device.volume.min\n        default = self.song().tracks[b].mixer_device.volume.default_value\n        param = self.song().tracks[b].mixer_device.volume.value\n\n\nexcept AttributeError:\n  return\n\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  self.song().tracks[b].mixer_device.volume.value = default\n  self.set_modifier_value(m, default)\n  \n  volumeStringB = self.song().tracks[b].mixer_device.volume.str_for_value(default)\n  sendSysex( 22, 1, volumeStringB )\n  sendPitchBend( 237, default, max, min )\n\n  return\n\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().tracks[b].mixer_device.volume.value + num\n\n  if param >= max:\n    self.song().tracks[b].mixer_device.volume.value = max\n    param = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().tracks[b].mixer_device.volume.value = min\n    param = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().tracks[b].mixer_device.volume.value = param\n    self.set_modifier_value(m, param)\n\n  volumeStringB = self.song().tracks[b].mixer_device.volume.str_for_value(param)\n  sendSysex( 22, 1, volumeStringB )\n  sendPitchBend( 237, param, max, min )\n\n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( trackB )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=3","custom_lom_listener":"","selectionObj":{"id":"trackb","name":"TrackB was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":22,"tokenisedCode":"self.midi_cc_ch_14_val_22","valueType":"int","value":"control_id=3","desc":"TrackB was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":3,"id":7,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Selected Parameter","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\"\nself.log_message(\"csslog: \" + str(quantized) + \"   \" + str(self.song().view.selected_parameter.value))\n\"\"\"\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\ntry:\n  m = \"m6\"\n  slider = self.midi_cc_ch_14_val_57.cur_val\n  max = self.song().view.selected_parameter.max\n  min = self.song().view.selected_parameter.min\n  range = abs(max) + abs(min)\n  if min > 0:\n    range = abs(max) - min\n  enabled = self.song().view.selected_parameter.is_enabled\n  quantized = self.song().view.selected_parameter.is_quantized\n\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_parameter.default_value\n  self.song().view.selected_parameter.value = default\n  valueString = self.song().view.selected_parameter.str_for_value(default)\n\n  self.set_modifier_value(m, default)\n\n  selectedStringA = self.song().view.selected_parameter.str_for_value(default)\n\n  sendSysex( 57, 1, selectedStringA )\n  sendPitchBend( 239, default, max, min )\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.get_modifier_value(m) + num\n\n  if param >= max:\n    self.song().view.selected_parameter.value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_parameter.value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_parameter.value = param\n    self.set_modifier_value(m, param)\n\n  selectedA = self.song().view.selected_parameter.value\n  selectedStringA = self.song().view.selected_parameter.str_for_value(selectedA)\n\n  sendSysex( 57, 1, selectedStringA )\n  sendPitchBend( 239, selectedA, max, min )\n  return\n\ndef checkParam( value ):\n  multiplier = 1\n  if range >= 0 and range <= 5:\n    multiplier = 1\n  elif range > 5 and range <= 20:\n    multiplier = 10\n  elif range > 20 and range <= 50:\n    multiplier = 40\n  elif range > 50 and range <= 70:\n    multiplier = 60\n  elif range > 70 and range < 100:\n    multiplier = 80\n\n  if value == 1:\n    setParam( 0.010 * multiplier )\n  elif value == 2:\n    setParam( 0.020 * multiplier )\n  elif value == 3:\n    setParam( 0.030 * multiplier )\n  elif value == 4:\n    setParam( 0.040 * multiplier )\n  elif value == 5:\n    setParam( 0.050 * multiplier )\n  elif value == 6:\n    setParam( 0.060 * multiplier )\n  elif value == 7:\n    setParam( 0.080 * multiplier )\n  elif value == 8:\n    setParam( 0.10 * multiplier )\n  elif value == 127:\n    setParam( -0.010 * multiplier )\n  elif value == 126:\n    setParam( -0.020 * multiplier )\n  elif value == 125:\n    setParam( -0.030 * multiplier )\n  elif value == 124:\n    setParam( -0.040 * multiplier )\n  elif value == 123:\n    setParam( -0.050 * multiplier )\n  elif value == 122:\n    setParam( -0.060 * multiplier )\n  elif value == 121:\n    setParam( -0.080 * multiplier )\n  elif value == 120:\n    setParam( -0.10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Functions for quantized parameters \"\"\"\ndef setItem( num ):\n\n  a = self.get_modifier_value(m) + num\n  if a >= max:\n    self.song().view.selected_parameter.value = max\n    self.set_modifier_value(m, max)\n  elif a <= 0:\n    self.song().view.selected_parameter.value = 0\n    self.set_modifier_value(m, 0)\n  else:\n    self.song().view.selected_parameter.value = a\n    self.set_modifier_value(m, a)\n\n  selectedA = self.song().view.selected_parameter.value\n  selectedStringA = self.song().view.selected_parameter.str_for_value(selectedA)\n\n  sendSysex( 57, 1, selectedStringA )\n  sendPitchBend( 239, selectedA, max, min )\n  return\n\ndef checkItem( value ):\n  if value == 1:\n    setItem( 0.10 )\n  elif value == 2:\n    setItem( 0.20 )\n  elif value == 3:\n    setItem( 0.30 )\n  elif value == 4:\n    setItem( 0.40 )\n  elif value == 5:\n    setItem( 0.50 )\n  elif value == 6:\n    setItem( 0.60 )\n  elif value == 7:\n    setItem( 0.080 )\n  elif value == 8:\n    setItem( 1.0 )\n  elif value == 127:\n    setItem( -0.10 )\n  elif value == 126:\n    setItem( -0.20 )\n  elif value == 125:\n    setItem( -0.30 )\n  elif value == 124:\n    setItem( -0.40 )\n  elif value == 123:\n    setItem( -0.50 )\n  elif value == 122:\n    setItem( -0.60 )\n  elif value == 121:\n    setItem( -0.80 )\n  elif value == 120:\n    setItem( -1.0 )\n  return\n\n\n\"\"\" Functions for parameters with ranges larger than 100 \"\"\"\ndef setMacro( num ):\n  param = self.get_modifier_value(m) + num\n  if param >= max:\n    self.song().view.selected_parameter.value = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_parameter.value = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_parameter.value = param\n    self.set_modifier_value(m, param)\n\n  selectedA = self.song().view.selected_parameter.value\n  selectedStringA = self.song().view.selected_parameter.str_for_value(selectedA)\n\n  sendSysex( 57, 1, selectedStringA )\n  sendPitchBend( 239, selectedA, max, min )\n  return\n\ndef checkMacro( value ):\n  multiplier = 1\n  if range >= 100 and range <= 110:\n    multiplier = 0.1\n  elif range > 110 and range <= 120:\n    multiplier = 0.3\n  elif range > 120 and range <= 130:\n    multiplier = 0.6\n  elif range > 130 and range <= 150:\n    multiplier = 0.8\n  elif range > 150 and range <= 200:\n    multiplier = 1\n  elif range > 200 and range <= 300:\n    multiplier = 1.2\n  elif range > 300:\n    multiplier = 1.4\n\n  if value == 1:\n    setMacro( 1 * multiplier )\n  elif value == 2:\n    setMacro( 2 * multiplier )\n  elif value == 3:\n    setMacro( 3 * multiplier )\n  elif value == 4:\n    setMacro( 4 * multiplier )\n  elif value == 5:\n    setMacro( 5 * multiplier )\n  elif value == 6:\n    setMacro( 6 * multiplier )\n  elif value == 7:\n    setMacro( 8 * multiplier )\n  elif value == 8:\n    setMacro( 10 )\n  elif value == 127:\n    setMacro( -1 * multiplier )\n  elif value == 126:\n    setMacro( -2 * multiplier )\n  elif value == 125:\n    setMacro( -3 * multiplier )\n  elif value == 124:\n    setMacro( -4 * multiplier)\n  elif value == 123:\n    setMacro( -5 * multiplier )\n  elif value == 122:\n    setMacro( -6 * multiplier )\n  elif value == 121:\n    setMacro( -8 * multiplier )\n  elif value == 120:\n    setMacro( -10 * multiplier )\n  elif value == 0:\n    setDefault()\n  return\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  if quantized == True:\n    checkItem( slider )\n  else:\n    if range >= 100:\n      checkMacro( slider )\n    else:\n      checkParam( slider )\n","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=41","custom_lom_listener":"","selectionObj":{"id":"selected_parameter","name":"Selected Parameter was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":57,"tokenisedCode":"self.midi_cc_ch_14_val_57","valueType":"int","value":"control_id=41","desc":"Selected Parameter was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":41,"id":48,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Selected Parameter Changed","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\n\"\"\" Selected Parameter \"\"\"\ntry:\n  selected = self.song().view.selected_parameter.name\n\n  selectedA = self.song().view.selected_parameter.value\n  selectedStringA = self.song().view.selected_parameter.str_for_value(selectedA)\n  maxSelectedA = self.song().view.selected_parameter.max\n  minSelectedA = self.song().view.selected_parameter.min\n\n  self.set_modifier_value(\"m6\", selectedA)\n\n  sendSysex( 57, 0, selected )\n  sendSysex( 57, 1, selectedStringA )\n  sendPitchBend( 239, selectedA, maxSelectedA, minSelectedA )\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"lom_name={\"id\":\"song_view_selected_parameter\",\"name\":\"selected parameter\",\"cat\":\"Song\",\"parent\":\"Song View\",\"tokenisedCode\":\"self.song().view.add_selected_parameter_listener\",\"extraFields\":[],\"code\":\"self.song().view.add_selected_parameter_listener\",\"desc\":\"selected parameter has changed\",\"dev\":\"called as soon as the property \\\"selected_parameter\\\" has changed\"}","custom_lom_listener":"self.song().view.add_selected_parameter_listener","selectionObj":{"id":"song_view_selected_parameter","name":"selected parameter","cat":"Song","parent":"Song View","tokenisedCode":"self.song().view.add_selected_parameter_listener","extraFields":[],"code":"self.song().view.add_selected_parameter_listener","desc":"selected parameter has changed","dev":"called as soon as the property \"selected_parameter\" has changed"},"selectionMenuName":"ListenerLom","code":"self.song().view.add_selected_parameter_listener","extraFields":[]},{"set_to_custom":false,"reaction_listener":"lom_name={\"id\":\"selected_parameter_name\",\"name\":\"name\",\"cat\":\"Selected Parameter\",\"parent\":\"Selected Parameter\",\"tokenisedCode\":\"self.song().view.selected_parameter.add_name_listener\",\"extraFields\":[],\"code\":\"self.song().view.selected_parameter.add_name_listener\",\"desc\":\"name has changed\",\"dev\":\"called as soon as the property \\\"name\\\" has changed\"}","custom_lom_listener":"self.song().view.selected_parameter.add_name_listener","selectionObj":{"id":"selected_parameter_name","name":"name","cat":"Selected Parameter","parent":"Selected Parameter","tokenisedCode":"self.song().view.selected_parameter.add_name_listener","extraFields":[],"code":"self.song().view.selected_parameter.add_name_listener","desc":"name has changed","dev":"called as soon as the property \"name\" has changed"},"selectionMenuName":"ListenerLom","code":"self.song().view.selected_parameter.add_name_listener","extraFields":[]}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":49,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Panning","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\ntry:\n  panning = self.midi_cc_ch_14_val_23.cur_val\n  enabled = self.song().view.selected_track.mixer_device.panning.is_enabled\n  m = \"m3\"\n\n  max = self.song().view.selected_track.mixer_device.panning.max\n  min = self.song().view.selected_track.mixer_device.panning.min\n\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.panning.default_value\n  self.song().view.selected_track.mixer_device.panning.value = default\n  self.set_modifier_value(m, default)\n\n  panString = self.song().view.selected_track.mixer_device.panning.str_for_value(default)\n  sendSysex( 23, 1, panString )\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.panning.value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.panning.value = max\n    param = max\n    self.set_modifier_value(m, max)\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.panning.value = min\n    param = min\n    self.set_modifier_value(m, min)\n  else:\n    self.song().view.selected_track.mixer_device.panning.value = param\n    self.set_modifier_value(m, param)\n  \n  panString = self.song().view.selected_track.mixer_device.panning.str_for_value(param)\n  sendSysex( 23, 1, panString )\n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.010 )\n  elif value == 2:\n    setParam( 0.020 )\n  elif value == 3:\n    setParam( 0.030 )\n  elif value == 4:\n    setParam( 0.040 )\n  elif value == 5:\n    setParam( 0.050 )\n  elif value == 6:\n    setParam( 0.060 )\n  elif value == 7:\n    setParam( 0.080 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.010 )\n  elif value == 126:\n    setParam( -0.020 )\n  elif value == 125:\n    setParam( -0.030 )\n  elif value == 124:\n    setParam( -0.040 )\n  elif value == 123:\n    setParam( -0.050 )\n  elif value == 122:\n    setParam( -0.060 )\n  elif value == 121:\n    setParam( -0.080 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( panning )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=4","custom_lom_listener":"","selectionObj":{"id":"panning","name":"Panning was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":23,"tokenisedCode":"self.midi_cc_ch_14_val_23","valueType":"int","value":"control_id=4","desc":"Panning was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":4,"id":4,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Master","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\ntry:\n  master = self.midi_cc_ch_14_val_27.cur_val\n  enabled = self.song().master_track.mixer_device.volume.is_enabled\n  m = \"m4\"\n\n  max = self.song().master_track.mixer_device.volume.max\n  min = self.song().master_track.mixer_device.volume.min\n\n\nexcept AttributeError:\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().master_track.mixer_device.volume.default_value\n  self.song().master_track.mixer_device.volume.value = default\n  self.set_modifier_value(m, default)\n  \n  masterString = self.song().master_track.mixer_device.volume.str_for_value(default)\n  sendSysex( 27, 1, masterString )\n  sendPitchBend( 238, default, max, min )\n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().master_track.mixer_device.volume.value + num\n\n  if param >= max:\n    self.song().master_track.mixer_device.volume.value = max\n    self.set_modifier_value(m, max)\n    param = max\n  elif param <= min:\n    self.song().master_track.mixer_device.volume.value = min\n    self.set_modifier_value(m, min)\n    param = min\n  else:\n    self.song().master_track.mixer_device.volume.value = param\n    self.set_modifier_value(m, param)\n\n  masterString = self.song().master_track.mixer_device.volume.str_for_value(param)\n  sendSysex( 27, 1, masterString )\n  sendPitchBend( 238, param, max, min )\n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( master )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=5","custom_lom_listener":"","selectionObj":{"id":"master","name":"Master was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":27,"tokenisedCode":"self.midi_cc_ch_14_val_27","valueType":"int","value":"control_id=5","desc":"Master was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":5,"id":26,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Solo","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendCC( status, data1, data2 ):\n  message = (status, data1, data2)\n  self._send_midi(message)\n  return\n\ntry:\n  masterName = self.song().view.selected_track.name\n  if masterName != \"Master\" and masterName != \"Main\":\n    solo = self.song().view.selected_track.solo\n\n    if solo == True:\n      self.song().view.selected_track.solo = False\n      sendCC( 191, 24, 0 )\n    else:\n      self.song().view.selected_track.solo = True\n      sendCC( 191, 24, 127 )\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=19","custom_lom_listener":"","selectionObj":{"id":"solo","name":"Solo was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":24,"tokenisedCode":"self.midi_cc_ch_14_val_24","valueType":"int","value":"control_id=19","desc":"Solo was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":19,"id":8,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Mute","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendCC( status, data1, data2 ):\n  message = (status, data1, data2)\n  self._send_midi(message)\n  return\n\ntry:\n  masterName = self.song().view.selected_track.name\n  if masterName != \"Master\" and masterName != \"Main\":\n    mute = self.song().view.selected_track.mute\n\n    if mute == True:\n      self.song().view.selected_track.mute = False\n      sendCC( 191, 25, 0 )\n    else:\n      self.song().view.selected_track.mute = True\n      sendCC( 191, 25, 127 )\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=20","custom_lom_listener":"","selectionObj":{"id":"mute","name":"Mute was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":25,"tokenisedCode":"self.midi_cc_ch_14_val_25","valueType":"int","value":"control_id=20","desc":"Mute was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":20,"id":9,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Arm Record","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendCC( status, data1, data2 ):\n  message = (status, data1, data2)\n  self._send_midi(message)\n  return\n\ntry:\n armed = self.song().view.selected_track.can_be_armed\n if armed == True:\n   arm = self.song().view.selected_track.arm\n\n   if arm == True:\n      self.song().view.selected_track.arm = False\n      sendCC( 191, 26, 0 )\n   else:\n      self.song().view.selected_track.arm = True\n      sendCC( 191, 26, 127 )\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=21","custom_lom_listener":"","selectionObj":{"id":"arm_record","name":"Arm Record was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":26,"tokenisedCode":"self.midi_cc_ch_14_val_26","valueType":"int","value":"control_id=21","desc":"Arm Record was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":21,"id":10,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Jog Wheel","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  view = self.application().view.focused_document_view\n  jog = self.midi_cc_ch_14_val_46.cur_val\n\n  if view == \"Session\":\n    jogMov = self.get_modifier_value(\"m6\")\n    jogMov = jogMov + 1\n    self.set_modifier_value(\"m6\", jogMov)\n    scene = self.get_selected_scene_num()\n    total = self.get_num_of_scenes()\n    \n    if jogMov >= 2:\n      if jog <= 8:\n        scene = scene + 1\n        if scene >= (total):\n          self.set_highlighted_scene(0)\n        else:\n          self.set_highlighted_scene(scene)\n      else:\n        scene = scene - 1\n        if scene < 0:\n          self.set_highlighted_scene(total - 1)\n        else:\n          self.set_highlighted_scene(scene)\n      self.set_modifier_value(\"m6\", 0)\n  else:\n    length = self.song().song_length\n    current = self.song().current_song_time\n    \n    scrub = self.get_modifier_value(\"m5\")\n    if jog <= 8:\n      \"\"\"\n      current = current + scrub\n      if current >= length:\n        self.song().current_song_time = length\n      else:\n        self.song().current_song_time = current\n      \"\"\"\n      self.song().jump_by(scrub)\n    else:\n      \"\"\"\n      current = current - scrub\n      if current <= 0.0:\n        self.song().current_song_time = 0.0\n      else:\n        self.song().current_song_time = current\n      \"\"\"\n      self.song().jump_by(-(scrub))\n\nexcept AttributeError:\n  return\n","set_to_custom":true,"element_menu":{"selectionMenuName":"lomFunctionsList","code":"self.song().scrub_by(#beats#)","selectionObj":{"id":"song_scrub_by","name":"scrub by","cat":"Song","Parent":"Song","tokenisedCode":"self.song().scrub_by(#beats#)","extraFields":[],"parameters":["beats"],"multitude_cats":[],"desc":"The amount (in beats) to scrub relative to the current Arrangement playback position. Same as jump_by , at the moment.","returnsValueOfType":null,"notes":"beats format?"},"extraFields":[]},"extra_parameters":{"code":"","parameters":[{"parameterObj":{"id":"beats","name":"Beats","desc":"A decimal number value. Example: 4.0 = 1 bar, 8.0 = 2 bars etc","used in functions (for reference only)":"song_jump_by, jump_in_running_session_clip","placeholder":1,"buttonDisplayName":"","defaultType":"custom","type":"custom","include_range_value_option":"y","value":"004.00.00.000","strReplace":"#beats#","tweakVal":null,"isOptional":null,"includeTheseMenus":["modifierList","customCode"],"selectionOptions":[],"displayIf":null},"value":"4.0"}]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=6","custom_lom_listener":"","selectionObj":{"id":"jog_wheel","name":"Jog Wheel was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":46,"tokenisedCode":"self.midi_cc_ch_14_val_46","valueType":"int","value":"control_id=6","desc":"Jog Wheel was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":28,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":6},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Play","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  play = self.midi_cc_ch_14_val_42.cur_val\n  playStatus = self.song().is_playing\n\n  if playStatus == False:\n    if play == 1:\n      self.song().continue_playing()\n    else:\n      self.song().start_playing()\n  else:\n    self.song().stop_playing()\n  \nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=24","custom_lom_listener":"","selectionObj":{"id":"play","name":"Play was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":42,"tokenisedCode":"self.midi_cc_ch_14_val_42","valueType":"int","value":"control_id=24","desc":"Play was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":24,"id":29,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Play is On\/Off","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendCC( status, data1, data2 ):\n  message = (status, data1, data2)\n  self._send_midi(message)\n  return\n\ntry:\n  playStatus = self.song().is_playing\n\n  if playStatus == False:\n    sendCC(191, 42, 0)\n  else:\n    sendCC(191, 42, 127)\n  \nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"lom_name={\"id\":\"song_is_playing\",\"name\":\"is playing\",\"cat\":\"Song\",\"parent\":\"Song\",\"tokenisedCode\":\"self.song().add_is_playing_listener\",\"extraFields\":[],\"code\":\"self.song().add_is_playing_listener\",\"desc\":\"Playback starts or stops\",\"dev\":\"called as soon as the property \\\"is_playing\\\" has changed\"}","custom_lom_listener":"self.song().add_is_playing_listener","selectionObj":{"id":"song_is_playing","name":"is playing","cat":"Song","parent":"Song","tokenisedCode":"self.song().add_is_playing_listener","extraFields":[],"code":"self.song().add_is_playing_listener","desc":"Playback starts or stops","dev":"called as soon as the property \"is_playing\" has changed"},"selectionMenuName":"ListenerLom","code":"self.song().add_is_playing_listener","extraFields":[]}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":24,"id":41,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Stop","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  self.song().stop_playing()\n   \nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=25","custom_lom_listener":"","selectionObj":{"id":"stop","name":"Stop was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":43,"tokenisedCode":"self.midi_cc_ch_14_val_43","valueType":"int","value":"control_id=25","desc":"Stop was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":25,"id":30,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Record","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  recordingStatus = self.song().record_mode\n  if recordingStatus == False:\n    self.song().record_mode = True\n  else:\n    self.song().record_mode = False\n   \nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=26","custom_lom_listener":"","selectionObj":{"id":"global_record","name":"Global Record was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":44,"tokenisedCode":"self.midi_cc_ch_14_val_44","valueType":"int","value":"control_id=26","desc":"Global Record was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":26,"id":31,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Scrub","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  view = self.application().view.focused_document_view\n  if view == \"Session\":\n    scene = self.get_selected_scene_num()\n    self.song().scenes[scene].fire_as_selected(True)\n  else:\n    value = self.get_modifier_value(\"m5\")\n    if value == 1.0:\n      self.set_modifier_value(\"m5\", 0.25)\n    else:\n      self.set_modifier_value(\"m5\", 1.0)\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=38","custom_lom_listener":"","selectionObj":{"id":"scrub","name":"Scrub was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":54,"tokenisedCode":"self.midi_cc_ch_14_val_54","valueType":"int","value":"control_id=38","desc":"Scrub was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":38,"id":42,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Record Quantization","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  q = self.song().midi_recording_quantization\n  q = q + 1\n  if q > 8:\n    self.song().midi_recording_quantization = 0\n  else:\n     self.song().midi_recording_quantization = q\n\n  status = \"None\"\n\n  if q == 0:\n    status = \"None\"\n  elif q == 1:\n    status = \"1\/4\"\n  elif q == 2:\n    status = \"1\/8\"\n  elif q == 3:\n    status = \"1\/8T\"\n  elif q == 4:\n    status = \"1\/8 + 1\/8T\"\n  elif q == 5:\n    status = \"1\/16\"\n  elif q == 6:\n    status = \"1\/16T\"\n  elif q == 7:\n    status = \"1\/16 + 1\/16T\"\n  elif q == 8:\n    status = \"1\/32\"\n\n  self.show_message(\"Record Quantization: \" + status)\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=34","custom_lom_listener":"","selectionObj":{"id":"quantize","name":"Quantize was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":53,"tokenisedCode":"self.midi_cc_ch_14_val_53","valueType":"int","value":"control_id=34","desc":"Quantize was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":34,"id":32,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Metronome","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  status = self.song().metronome\n  if status == False:\n    self.song().metronome = True\n  else:\n    self.song().metronome = False\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=29","custom_lom_listener":"","selectionObj":{"id":"metronome","name":"Metronome was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":48,"tokenisedCode":"self.midi_cc_ch_14_val_48","valueType":"int","value":"control_id=29","desc":"Metronome was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":29,"id":33,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Cycle","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  status = self.song().loop\n  if status == False:\n    self.song().loop = True\n  else:\n    self.song().loop = False\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=28","custom_lom_listener":"","selectionObj":{"id":"cycle","name":"Cycle was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":47,"tokenisedCode":"self.midi_cc_ch_14_val_47","valueType":"int","value":"control_id=28","desc":"Cycle was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":28,"id":34,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Overdub","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  status = self.song().arrangement_overdub\n  if status == False:\n    self.song().arrangement_overdub = True\n  else:\n    self.song().arrangement_overdub = False\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=30","custom_lom_listener":"","selectionObj":{"id":"overdub","name":"Overdub was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":49,"tokenisedCode":"self.midi_cc_ch_14_val_49","valueType":"int","value":"control_id=30","desc":"Overdub was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":30,"id":39,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Automation","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  status = self.song().session_automation_record\n  if status == False:\n    self.song().session_automation_record = True\n  else:\n    self.song().session_automation_record = False\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=31","custom_lom_listener":"","selectionObj":{"id":"automation","name":"Automation was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":50,"tokenisedCode":"self.midi_cc_ch_14_val_50","valueType":"int","value":"control_id=31","desc":"Automation was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":31,"id":36,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Session Record","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  status = self.song().session_record\n  if status == False:\n    self.song().session_record = True\n  else:\n    self.song().session_record = False\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=27","custom_lom_listener":"","selectionObj":{"id":"session_record","name":"Session Record was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":45,"tokenisedCode":"self.midi_cc_ch_14_val_45","valueType":"int","value":"control_id=27","desc":"Session Record was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":27,"id":37,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Capture","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  self.song().capture_midi(0)\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=32","custom_lom_listener":"","selectionObj":{"id":"capture","name":"Capture was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":51,"tokenisedCode":"self.midi_cc_ch_14_val_51","valueType":"int","value":"control_id=32","desc":"Capture was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":32,"id":38,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Punch","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  punchIn = self.song().punch_in\n  punchOut = self.song().punch_out\n  \n  if punchIn == False and punchOut == False:\n    self.song().punch_in = True\n  if punchIn == True and punchOut == False:\n    self.song().punch_out = True\n  if punchIn == True and punchOut == True:\n    self.song().punch_in = False\n  if punchIn == False and punchOut == True:\n    self.song().punch_out = False\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=33","custom_lom_listener":"","selectionObj":{"id":"punch","name":"Punch was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":52,"tokenisedCode":"self.midi_cc_ch_14_val_52","valueType":"int","value":"control_id=33","desc":"Punch was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":33,"id":40,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send On Off","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":true,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"\"\"\" Sends \"\"\"\ntry:\n  sendCount = self.get_modifier_value(\"m5\")\n  i = sendCount - 1\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  if total > 0 and sendCount <= total:\n    sendState = self.song().view.selected_track.mixer_device.sends[i].state\n\n    if sendState == 0:\n      self.song().view.selected_track.mixer_device.sends[i].state = 1\n    if sendState == 1:\n      self.song().view.selected_track.mixer_device.sends[i].state = 0\n\nexcept AttributeError:\n  return\n","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=23","custom_lom_listener":"","selectionObj":{"id":"send_on_off","name":"Send On Off was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":41,"tokenisedCode":"self.midi_cc_ch_14_val_41","valueType":"int","value":"control_id=23","desc":"Send On Off was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":23,"id":47,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send Count","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"def sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\n\n\"\"\" Sends \"\"\"\ntry:\n  sendCount = self.midi_cc_ch_14_val_40.cur_val\n  self.set_modifier_value(\"m5\", sendCount)\n  i = sendCount - 1\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  if total > 0 and sendCount <= total:\n    sendName = self.song().view.selected_track.mixer_device.sends[i].original_name\n\n    sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n    sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n\n    maxS = self.song().view.selected_track.mixer_device.sends[i].max\n    minS = self.song().view.selected_track.mixer_device.sends[i].min\n\n    sendSysex( (28 + i), 0, sendName )\n    sendSysex( (28 + i), 1, sendStrValue )\n    sendPitchBend( (224 + i), sendValue, maxS, minS )\n\n  else:\n    sendSysex( (28 + i), 0, \"-\" )\n    sendSysex( (28 + i), 1, \"-\" )\n    sendPitchBend( (224 + i), 0.0, 1.0, 0.0 )\n\nexcept AttributeError:\n  return","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=40","custom_lom_listener":"","selectionObj":{"id":"send_count","name":"Send Count was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":40,"tokenisedCode":"self.midi_cc_ch_14_val_40","valueType":"int","value":"control_id=40","desc":"Send Count was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"controller_input_id":40,"id":46,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":""},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send 1","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  send = self.midi_cc_ch_14_val_28.cur_val\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  enabled = False\n  max = 0.0\n  min = 0.0\n\n  m = 0.0\n\n  i = 0\n\n  if total >= (i + 1):\n    enabled = self.song().view.selected_track.mixer_device.sends[i].is_enabled\n    max = self.song().view.selected_track.mixer_device.sends[i].max\n    min = self.song().view.selected_track.mixer_device.sends[i].min\n\nexcept AttributeError:\n  return\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.sends[i].default_value\n  self.song().view.selected_track.mixer_device.sends[i].value = default\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.sends[i].value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.sends[i].value = max\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.sends[i].value = min\n  else:\n    self.song().view.selected_track.mixer_device.sends[i].value = param\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( send )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=7","custom_lom_listener":"","selectionObj":{"id":"send_1","name":"Send 1 was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":28,"tokenisedCode":"self.midi_cc_ch_14_val_28","valueType":"int","value":"control_id=7","desc":"Send 1 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":11,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":7},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send 2","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  send = self.midi_cc_ch_14_val_29.cur_val\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  enabled = False\n  max = 0.0\n  min = 0.0\n\n  i = 1\n\n  if total >= (i + 1):\n    enabled = self.song().view.selected_track.mixer_device.sends[i].is_enabled\n    max = self.song().view.selected_track.mixer_device.sends[i].max\n    min = self.song().view.selected_track.mixer_device.sends[i].min\n\nexcept AttributeError:\n  return\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.sends[i].default_value\n  self.song().view.selected_track.mixer_device.sends[i].value = default\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.sends[i].value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.sends[i].value = max\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.sends[i].value = min\n  else:\n    self.song().view.selected_track.mixer_device.sends[i].value = param\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( send )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=8","custom_lom_listener":"","selectionObj":{"id":"send_2","name":"Send 2 was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":29,"tokenisedCode":"self.midi_cc_ch_14_val_29","valueType":"int","value":"control_id=8","desc":"Send 2 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":12,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":8},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send 3","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  send = self.midi_cc_ch_14_val_30.cur_val\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  enabled = False\n  max = 0.0\n  min = 0.0\n\n  i = 2\n\n  if total >= (i + 1):\n    enabled = self.song().view.selected_track.mixer_device.sends[i].is_enabled\n    max = self.song().view.selected_track.mixer_device.sends[i].max\n    min = self.song().view.selected_track.mixer_device.sends[i].min\n\nexcept AttributeError:\n  return\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.sends[i].default_value\n  self.song().view.selected_track.mixer_device.sends[i].value = default\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.sends[i].value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.sends[i].value = max\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.sends[i].value = min\n  else:\n    self.song().view.selected_track.mixer_device.sends[i].value = param\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( send )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=9","custom_lom_listener":"","selectionObj":{"id":"send_3","name":"Send 3 was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":30,"tokenisedCode":"self.midi_cc_ch_14_val_30","valueType":"int","value":"control_id=9","desc":"Send 3 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":13,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":9},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send 4","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  send = self.midi_cc_ch_14_val_31.cur_val\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  enabled = False\n  max = 0.0\n  min = 0.0\n\n  i = 3\n\n  if total >= (i + 1):\n    enabled = self.song().view.selected_track.mixer_device.sends[i].is_enabled\n    max = self.song().view.selected_track.mixer_device.sends[i].max\n    min = self.song().view.selected_track.mixer_device.sends[i].min\n\nexcept AttributeError:\n  return\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.sends[i].default_value\n  self.song().view.selected_track.mixer_device.sends[i].value = default\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.sends[i].value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.sends[i].value = max\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.sends[i].value = min\n  else:\n    self.song().view.selected_track.mixer_device.sends[i].value = param\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( send )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=10","custom_lom_listener":"","selectionObj":{"id":"send_4","name":"Send 4 was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":31,"tokenisedCode":"self.midi_cc_ch_14_val_31","valueType":"int","value":"control_id=10","desc":"Send 4 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":14,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":10},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send 5","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  send = self.midi_cc_ch_14_val_32.cur_val\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  enabled = False\n  max = 0.0\n  min = 0.0\n\n  i = 4\n\n  if total >= (i + 1):\n    enabled = self.song().view.selected_track.mixer_device.sends[i].is_enabled\n    max = self.song().view.selected_track.mixer_device.sends[i].max\n    min = self.song().view.selected_track.mixer_device.sends[i].min\n\nexcept AttributeError:\n  return\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.sends[i].default_value\n  self.song().view.selected_track.mixer_device.sends[i].value = default\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.sends[i].value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.sends[i].value = max\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.sends[i].value = min\n  else:\n    self.song().view.selected_track.mixer_device.sends[i].value = param\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( send )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=11","custom_lom_listener":"","selectionObj":{"id":"send_5","name":"Send 5 was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":32,"tokenisedCode":"self.midi_cc_ch_14_val_32","valueType":"int","value":"control_id=11","desc":"Send 5 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":15,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":11},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send 6","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  send = self.midi_cc_ch_14_val_33.cur_val\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  enabled = False\n  max = 0.0\n  min = 0.0\n\n  i = 5\n\n  if total >= (i + 1):\n    enabled = self.song().view.selected_track.mixer_device.sends[i].is_enabled\n    max = self.song().view.selected_track.mixer_device.sends[i].max\n    min = self.song().view.selected_track.mixer_device.sends[i].min\n\nexcept AttributeError:\n  return\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.sends[i].default_value\n  self.song().view.selected_track.mixer_device.sends[i].value = default\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.sends[i].value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.sends[i].value = max\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.sends[i].value = min\n  else:\n    self.song().view.selected_track.mixer_device.sends[i].value = param\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( send )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=12","custom_lom_listener":"","selectionObj":{"id":"send_6","name":"Send 6 was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":33,"tokenisedCode":"self.midi_cc_ch_14_val_33","valueType":"int","value":"control_id=12","desc":"Send 6 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":16,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":12},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send 7","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  send = self.midi_cc_ch_14_val_34.cur_val\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  enabled = False\n  max = 0.0\n  min = 0.0\n\n  i = 6\n\n  if total >= (i + 1):\n    enabled = self.song().view.selected_track.mixer_device.sends[i].is_enabled\n    max = self.song().view.selected_track.mixer_device.sends[i].max\n    min = self.song().view.selected_track.mixer_device.sends[i].min\n\nexcept AttributeError:\n  return\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.sends[i].default_value\n  self.song().view.selected_track.mixer_device.sends[i].value = default\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.sends[i].value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.sends[i].value = max\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.sends[i].value = min\n  else:\n    self.song().view.selected_track.mixer_device.sends[i].value = param\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( send )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=13","custom_lom_listener":"","selectionObj":{"id":"send_7","name":"Send 7 was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":34,"tokenisedCode":"self.midi_cc_ch_14_val_34","valueType":"int","value":"control_id=13","desc":"Send 7 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":17,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":13},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send 8","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  send = self.midi_cc_ch_14_val_35.cur_val\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  enabled = False\n  max = 0.0\n  min = 0.0\n\n  i = 7\n\n  if total >= (i + 1):\n    enabled = self.song().view.selected_track.mixer_device.sends[i].is_enabled\n    max = self.song().view.selected_track.mixer_device.sends[i].max\n    min = self.song().view.selected_track.mixer_device.sends[i].min\n\nexcept AttributeError:\n  return\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.sends[i].default_value\n  self.song().view.selected_track.mixer_device.sends[i].value = default\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.sends[i].value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.sends[i].value = max\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.sends[i].value = min\n  else:\n    self.song().view.selected_track.mixer_device.sends[i].value = param\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( send )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=14","custom_lom_listener":"","selectionObj":{"id":"send_8","name":"Send 8 was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":35,"tokenisedCode":"self.midi_cc_ch_14_val_35","valueType":"int","value":"control_id=14","desc":"Send 8 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":18,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":14},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send 9","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  send = self.midi_cc_ch_14_val_36.cur_val\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  enabled = False\n  max = 0.0\n  min = 0.0\n\n  i = 8\n\n  if total >= (i + 1):\n    enabled = self.song().view.selected_track.mixer_device.sends[i].is_enabled\n    max = self.song().view.selected_track.mixer_device.sends[i].max\n    min = self.song().view.selected_track.mixer_device.sends[i].min\n\nexcept AttributeError:\n  return\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.sends[i].default_value\n  self.song().view.selected_track.mixer_device.sends[i].value = default\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.sends[i].value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.sends[i].value = max\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.sends[i].value = min\n  else:\n    self.song().view.selected_track.mixer_device.sends[i].value = param\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( send )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=15","custom_lom_listener":"","selectionObj":{"id":"send_9","name":"Send 9 was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":36,"tokenisedCode":"self.midi_cc_ch_14_val_36","valueType":"int","value":"control_id=15","desc":"Send 9 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":19,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":15},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send 10","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  send = self.midi_cc_ch_14_val_37.cur_val\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  enabled = False\n  max = 0.0\n  min = 0.0\n\n  i = 9\n\n  if total >= (i + 1):\n    enabled = self.song().view.selected_track.mixer_device.sends[i].is_enabled\n    max = self.song().view.selected_track.mixer_device.sends[i].max\n    min = self.song().view.selected_track.mixer_device.sends[i].min\n\nexcept AttributeError:\n  return\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.sends[i].default_value\n  self.song().view.selected_track.mixer_device.sends[i].value = default\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.sends[i].value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.sends[i].value = max\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.sends[i].value = min\n  else:\n    self.song().view.selected_track.mixer_device.sends[i].value = param\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( send )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=16","custom_lom_listener":"","selectionObj":{"id":"send_10","name":"Send 10 was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":37,"tokenisedCode":"self.midi_cc_ch_14_val_37","valueType":"int","value":"control_id=16","desc":"Send 10 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":20,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":16},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send 11","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  send = self.midi_cc_ch_14_val_38.cur_val\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  enabled = False\n  max = 0.0\n  min = 0.0\n\n  i = 10\n\n  if total >= (i + 1):\n    enabled = self.song().view.selected_track.mixer_device.sends[i].is_enabled\n    max = self.song().view.selected_track.mixer_device.sends[i].max\n    min = self.song().view.selected_track.mixer_device.sends[i].min\n\nexcept AttributeError:\n  return\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.sends[i].default_value\n  self.song().view.selected_track.mixer_device.sends[i].value = default\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.sends[i].value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.sends[i].value = max\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.sends[i].value = min\n  else:\n    self.song().view.selected_track.mixer_device.sends[i].value = param\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( send )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=17","custom_lom_listener":"","selectionObj":{"id":"send_11","name":"Send 11 was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":38,"tokenisedCode":"self.midi_cc_ch_14_val_38","valueType":"int","value":"control_id=17","desc":"Send 11 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":21,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":17},{"type":{"id":68,"name":"Reaction","type":"Reaction_v2","parent":0,"has_child":0,"level":1,"icon":"question_answer"},"chips":[],"name":"Send 12","mode_id":1,"LED_mapping_type_needs_feedback":false,"reaction_action_blocks":[{"showConditions":false,"showActions":true,"loop":{"full_code":"","set_to_custom":false,"loopActive":false,"code":""},"conditionGroups":[],"actions":[{"full_code":"try:\n  send = self.midi_cc_ch_14_val_39.cur_val\n  total = len(self.song().view.selected_track.mixer_device.sends)\n\n  enabled = False\n  max = 0.0\n  min = 0.0\n\n  i = 11\n\n  if total >= (i + 1):\n    enabled = self.song().view.selected_track.mixer_device.sends[i].is_enabled\n    max = self.song().view.selected_track.mixer_device.sends[i].max\n    min = self.song().view.selected_track.mixer_device.sends[i].min\n\nexcept AttributeError:\n  return\n\ndef sendPitchBend( pb, val, max, min ):\n  oldRange = abs(max) + abs(min)\n  if min > 0:\n    oldRange = abs(max) - min\n  oldValue = val\n\n  if oldRange == 0:\n    newValue = 0\n  else:\n    newValue = ((oldValue - min) * 16383) \/ oldRange\n    if newValue >= 16383:\n      newValue = 16383\n\n    intValue = int(newValue)\n    msb = (intValue  >> 7) & 0xff\n    lsb = (intValue - (msb << 7)) & 0xff\n    self._send_midi((pb, msb, lsb))\n    return\n\n\n\ndef sendSysex( m, n, new ):\n  ascii = self.get_modifier_value(\"m20\")\n  asciiExt = self.get_modifier_value(\"m19\")\n\n  sysex = (240, 0, 0, 102, 16, n)\n  exit = (247,)\n  y = [m]\n\n  for i in new:\n    x = 42\n    if i in ascii:\n      x = ascii[i]\n    if x > 127:\n      if x in asciiExt:\n        x = asciiExt[x]\n      else:\n        x = 42\n    y.append(x)\n\n  if len(y) == 1:\n    y.append(45)\n\n  sysex = sysex + tuple(y) + exit\n  self._send_midi(sysex)\n  return\n\n\"\"\" Function for Default \"\"\"\ndef setDefault():\n  default = self.song().view.selected_track.mixer_device.sends[i].default_value\n  self.song().view.selected_track.mixer_device.sends[i].value = default\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\n\"\"\" Functions for regular parameters \"\"\"\ndef setParam( num ):\n  param = self.song().view.selected_track.mixer_device.sends[i].value + num\n\n  if param >= max:\n    self.song().view.selected_track.mixer_device.sends[i].value = max\n  elif param <= min:\n    self.song().view.selected_track.mixer_device.sends[i].value = min\n  else:\n    self.song().view.selected_track.mixer_device.sends[i].value = param\n\n  sendValue = self.song().view.selected_track.mixer_device.sends[i].value\n  sendStrValue = self.song().view.selected_track.mixer_device.sends[i].str_for_value(sendValue)\n  \n  sendSysex( (28 + i), 1, sendStrValue )\n  sendPitchBend( (224 + i), sendValue, max, min )\n  \n  return\n\ndef checkParam( value ):\n  if value == 1:\n    setParam( 0.003 )\n  elif value == 2:\n    setParam( 0.008 )\n  elif value == 3:\n    setParam( 0.020 )\n  elif value == 4:\n    setParam( 0.030 )\n  elif value == 5:\n    setParam( 0.040 )\n  elif value == 6:\n    setParam( 0.050 )\n  elif value == 7:\n    setParam( 0.070 )\n  elif value == 8:\n    setParam( 0.10 )\n  elif value == 127:\n    setParam( -0.003 )\n  elif value == 126:\n    setParam( -0.008 )\n  elif value == 125:\n    setParam( -0.020 )\n  elif value == 124:\n    setParam( -0.030 )\n  elif value == 123:\n    setParam( -0.040 )\n  elif value == 122:\n    setParam( -0.050 )\n  elif value == 121:\n    setParam( -0.070 )\n  elif value == 120:\n    setParam( -0.10 )\n  elif value == 0:\n    setDefault()\n  return\n\n\n\"\"\" Action \"\"\"\nif enabled == True:\n  checkParam( send )","set_to_custom":true,"element_menu":{"selectionMenuName":"","code":""},"extra_parameters":{"code":"","parameters":[]}}]}],"reaction_listeners":[{"set_to_custom":false,"reaction_listener":"control_id=18","custom_lom_listener":"","selectionObj":{"id":"send_12","name":"Send 12 was moved","MIDI_type":"cc","MIDI_channel":14,"MIDI_value":39,"tokenisedCode":"self.midi_cc_ch_14_val_39","valueType":"int","value":"control_id=18","desc":"Send 12 was moved"}}],"reaction_listeners_show_listeners":true,"control":"default","control_type":"Absolute","control_type_takeover_mode":"None","control_type_on":127,"control_type_off":0,"control_type_first":0,"control_type_last":127,"control_type_reverse_mode":"False","control_type_left":0,"control_type_right":127,"control_type_steps":1,"control_type_switch":"Momentary","control_type_delay_amount":0.5,"id":22,"get_mode_name":"Mixer Mode","get_controller_name":"","get_type_name":"Reaction_v2","errors":"","controller_input_id":18},{"LED_feedback":"custom","LED_feedback_active":false,"LED_mapping_type_needs_feedback":false,"LED_off":0,"LED_on":127,"LED_send_feedback_to_selected":["Slider 1"],"has_child":1,"id":1,"level":0,"name":"Mixer Mode","parent_id":0,"type":{"id":0,"name":"Mode","type":"Mode","parent":null,"has_child":1,"level":0,"icon":"fa-layer-group"},"get_mode_name":"","get_controller_name":"","get_type_name":"Mode","errors":"","chips":[]}]